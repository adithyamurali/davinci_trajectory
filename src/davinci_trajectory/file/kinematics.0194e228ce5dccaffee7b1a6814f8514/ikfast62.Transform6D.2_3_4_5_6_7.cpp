/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 62 generated on 2014-08-01 12:43:38.184342
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==62);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56,x57,x58,x59,x60,x61,x62,x63,x64,x65,x66,x67,x68,x69,x70,x71,x72,x73,x74,x75,x76,x77,x78,x79,x80,x81,x82;
x0=IKsin(j[0]);
x1=IKcos(j[0]);
x2=IKsin(j[1]);
x3=IKcos(j[1]);
x4=IKcos(j[3]);
x5=IKsin(j[3]);
x6=IKcos(j[5]);
x7=IKsin(j[5]);
x8=IKcos(j[4]);
x9=IKsin(j[4]);
x10=((IkReal(0.213852473949526))*(x0));
x11=((IkReal(0.273375155731700))*(x0));
x12=((IkReal(0.555366241559602))*(x1));
x13=((IkReal(0.159580246101866))+(((IkReal(-0.760759360260365))*(x3))));
x14=((IkReal(0.760759360260365))*(x3));
x15=((IkReal(0.933204742898924))*(x1));
x16=((IkReal(0.359345109652202))*(x0));
x17=((IkReal(0.213852473949526))*(x1));
x18=((IkReal(0.555366241559602))*(x0));
x19=((IkReal(0.0100000000000000))*(x8));
x20=((IkReal(0.965877501084962))*(x2));
x21=((IkReal(0.00945162540060176))*(x3));
x22=((IkReal(0.0120000000000000))*(x4));
x23=((IkReal(0.0100000000000000))*(x4));
x24=((IkReal(1.00000000000000))*(x8));
x25=((IkReal(0.0100000000000000))*(x9));
x26=((IkReal(0.616141540414459))*(x3));
x27=((IkReal(0.0100000000000000))*(x5));
x28=((IkReal(0.787635450050147))*(x3));
x29=((IkReal(1.00000000000000))*(x5));
x30=((IkReal(0.0120000000000000))*(x5));
x31=((IkReal(0.203997053782493))+(((IkReal(0.595117251370157))*(x3))));
x32=((IkReal(-0.159580246101866))+(x14));
x33=((IkReal(-1.00000000000000))*(x3));
x34=((IkReal(-0.616141540414459))*(x3));
x35=((IkReal(-1.00000000000000))*(x2));
x36=((((IkReal(-0.241699403086935))*(x1)))+(((IkReal(0.0930701426091587))*(x0))));
x37=((((IkReal(-1.00000000000000))*(x15)))+(x16));
x38=((((IkReal(-1.00000000000000))*(x16)))+(x15));
x39=((((IkReal(0.359345109652202))*(x1)))+(((IkReal(0.933204742898924))*(x0))));
x40=((IkReal(-1.00000000000000))*(x39));
x41=((((IkReal(-0.0930701426091587))*(x1)))+(((IkReal(-0.241699403086935))*(x0))));
x42=((x17)+(x18));
x43=((x2)*(x37));
x44=((x3)*(x36));
x45=((x3)*(x38));
x46=((x28)*(x36));
x47=((IkReal(0.787635450050147))*(x43));
x48=((x2)*(x39));
x49=((x3)*(x40));
x50=((x2)*(x41));
x51=((x3)*(x41));
x52=((IkReal(0.787635450050147))*(x48));
x53=((x28)*(x41));
x54=((((IkReal(-1.00000000000000))*(x29)*(x31)))+(((x20)*(x4))));
x55=((((x31)*(x4)))+(((x20)*(x5))));
x56=((x55)*(x9));
x57=((((x2)*(x36)))+(x49));
x58=((x45)+(x50));
x59=((x47)+(x53));
x60=((x4)*(x57));
x61=((x4)*(x58));
x62=((((x35)*(x36)))+(((x33)*(x40))));
x63=((((x35)*(x41)))+(((x33)*(x38))));
x64=((x46)+(x52)+(x10));
x65=((x5)*(x62));
x66=((x5)*(x63));
x67=((((IkReal(-0.709944243199724))*(x1)))+(x11)+(((IkReal(-1.00000000000000))*(x26)*(x36)))+(((IkReal(-0.616141540414459))*(x48))));
x68=((((IkReal(-0.555366241559602))*(x1)))+(x64));
x69=((((x34)*(x36)))+(((IkReal(-0.709944243199724))*(x1)))+(x11)+(((IkReal(-0.616141540414459))*(x48))));
x70=((((IkReal(-0.709944243199724))*(x0)))+(((IkReal(-1.00000000000000))*(x26)*(x41)))+(((IkReal(-0.616141540414459))*(x43)))+(((IkReal(-0.273375155731700))*(x1))));
x71=((((IkReal(-0.555366241559602))*(x0)))+(x59)+(((IkReal(-0.213852473949526))*(x1))));
x72=((((x34)*(x41)))+(((IkReal(-0.709944243199724))*(x0)))+(((IkReal(-0.616141540414459))*(x43)))+(((IkReal(-0.273375155731700))*(x1))));
x73=((x71)*(x8));
x74=((x4)*(x69));
x75=((x68)*(x8));
x76=((x4)*(x72));
x77=((((x5)*(x67)))+(x60));
x78=((((x5)*(x70)))+(x61));
x79=((x65)+(((x4)*(x67))));
x80=((((x4)*(x70)))+(x66));
x81=((x79)*(x9));
x82=((x80)*(x9));
eerot[0]=((((x6)*(((x75)+(x81)))))+(((x7)*(x77))));
eerot[1]=((((x7)*(((((IkReal(-1.00000000000000))*(x81)))+(((IkReal(-1.00000000000000))*(x75)))))))+(((x6)*(x77))));
eerot[2]=((((x8)*(((((IkReal(-1.00000000000000))*(x74)))+(((IkReal(-1.00000000000000))*(x65)))))))+(((x9)*(((((IkReal(-1.00000000000000))*(x12)))+(x64))))));
eetrans[0]=((((x9)*(((((x30)*(x62)))+(((x22)*(x69)))))))+(((j[2])*(((x12)+(((IkReal(-1.00000000000000))*(x64)))))))+(((x6)*(((((x19)*(x68)))+(((x25)*(((x74)+(x65)))))))))+(((x7)*(((((x27)*(x69)))+(((x23)*(x57)))))))+(((x8)*(((((IkReal(0.00256622968739431))*(x0)))+(((IkReal(-0.00666439489871522))*(x1)))+(((x21)*(x36)))+(((IkReal(0.00945162540060176))*(x48))))))));
eerot[3]=((((x6)*(((((IkReal(-1.00000000000000))*(x13)*(x24)))+(((IkReal(-1.00000000000000))*(x56)))))))+(((x54)*(x7))));
eerot[4]=((((x54)*(x6)))+(((x7)*(((x56)+(((x13)*(x8))))))));
eerot[5]=((((x32)*(x9)))+(((x55)*(x8))));
IkReal x83=((IkReal(1.00000000000000))*(x31));
eetrans[1]=((((x7)*(((((IkReal(-1.00000000000000))*(x27)*(x83)))+(((IkReal(0.00965877501084962))*(x2)*(x4)))))))+(((x9)*(((((IkReal(-0.0115905300130195))*(x2)*(x5)))+(((IkReal(-1.00000000000000))*(x22)*(x83)))))))+(((x8)*(((IkReal(-0.00191496295322240))+(((IkReal(0.00912911232312438))*(x3)))))))+(((x6)*(((((IkReal(-1.00000000000000))*(x13)*(x19)))+(((IkReal(-1.00000000000000))*(x25)*(x55)))))))+(((IkReal(-1.00000000000000))*(j[2])*(x32))));
eerot[6]=((((x7)*(x78)))+(((x6)*(((x73)+(x82))))));
eerot[7]=((((x7)*(((((IkReal(-1.00000000000000))*(x82)))+(((IkReal(-1.00000000000000))*(x24)*(x71)))))))+(((x6)*(x78))));
eerot[8]=((((x71)*(x9)))+(((IkReal(-1.00000000000000))*(x8)*(((((x29)*(((((IkReal(-1.00000000000000))*(x45)))+(((IkReal(-1.00000000000000))*(x50)))))))+(((IkReal(1.00000000000000))*(x76))))))));
eetrans[2]=((((x7)*(((((x27)*(x72)))+(((x23)*(x58)))))))+(((x9)*(((((x30)*(x63)))+(((x22)*(x72)))))))+(((x6)*(((((x19)*(((((IkReal(-1.00000000000000))*(x42)))+(x59)))))+(((x25)*(((x76)+(x66)))))))))+(((j[2])*(((((IkReal(-0.787635450050147))*(x51)))+(x42)+(((IkReal(-0.787635450050147))*(x43)))))))+(((x8)*(((((IkReal(-0.00666439489871522))*(x0)))+(((IkReal(-0.00256622968739431))*(x1)))+(((x21)*(x41)))+(((IkReal(0.00945162540060176))*(x43))))))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,j6,cj6,sj6,htj6,j7,cj7,sj7,htj7,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5,_ij6[2], _nj6,_ij7[2], _nj7;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; j6=numeric_limits<IkReal>::quiet_NaN(); _ij6[0] = -1; _ij6[1] = -1; _nj6 = -1; j7=numeric_limits<IkReal>::quiet_NaN(); _ij7[0] = -1; _ij7[1] = -1; _nj7 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=r01;
new_r02=r02;
new_px=((px)+(((IkReal(-0.0100000000000000))*(r00))));
new_r10=r20;
new_r11=r21;
new_r12=r22;
new_py=((((IkReal(-0.0100000000000000))*(r20)))+(pz));
new_r20=((IkReal(-1.00000000000000))*(r10));
new_r21=((IkReal(-1.00000000000000))*(r11));
new_r22=((IkReal(-1.00000000000000))*(r12));
new_pz=((((IkReal(0.0100000000000000))*(r10)))+(((IkReal(-1.00000000000000))*(py))));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
{
IkReal j7array[2], cj7array[2], sj7array[2];
bool j7valid[2]={false};
_nj7 = 2;
if( IKabs(((IkReal(-1.00000000000000))*(npy))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-1.00000000000000))*(npx))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x84=IKatan2(((IkReal(-1.00000000000000))*(npy)), ((IkReal(-1.00000000000000))*(npx)));
j7array[0]=((IkReal(-1.00000000000000))*(x84));
sj7array[0]=IKsin(j7array[0]);
cj7array[0]=IKcos(j7array[0]);
j7array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x84))));
sj7array[1]=IKsin(j7array[1]);
cj7array[1]=IKcos(j7array[1]);
if( j7array[0] > IKPI )
{
    j7array[0]-=IK2PI;
}
else if( j7array[0] < -IKPI )
{    j7array[0]+=IK2PI;
}
j7valid[0] = true;
if( j7array[1] > IKPI )
{
    j7array[1]-=IK2PI;
}
else if( j7array[1] < -IKPI )
{    j7array[1]+=IK2PI;
}
j7valid[1] = true;
for(int ij7 = 0; ij7 < 2; ++ij7)
{
if( !j7valid[ij7] )
{
    continue;
}
_ij7[0] = ij7; _ij7[1] = -1;
for(int iij7 = ij7+1; iij7 < 2; ++iij7)
{
if( j7valid[iij7] && IKabs(cj7array[ij7]-cj7array[iij7]) < IKFAST_SOLUTION_THRESH && IKabs(sj7array[ij7]-sj7array[iij7]) < IKFAST_SOLUTION_THRESH )
{
    j7valid[iij7]=false; _ij7[1] = iij7; break; 
}
}
j7 = j7array[ij7]; cj7 = cj7array[ij7]; sj7 = sj7array[ij7];

{
IkReal j4array[2], cj4array[2], sj4array[2];
bool j4valid[2]={false};
_nj4 = 2;
if( (((IkReal(0.000144000000000000))+(((IkReal(0.0240000000000000))*(npy)*(sj7)))+(((IkReal(-0.0240000000000000))*(cj7)*(npx)))+(pp))) < (IkReal)-0.00001 )
    continue;
IkReal x85=IKsqrt(((IkReal(0.000144000000000000))+(((IkReal(0.0240000000000000))*(npy)*(sj7)))+(((IkReal(-0.0240000000000000))*(cj7)*(npx)))+(pp)));
j4array[0]=x85;
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
j4array[1]=((IkReal(-1.00000000000000))*(x85));
sj4array[1]=IKsin(j4array[1]);
cj4array[1]=IKcos(j4array[1]);
j4valid[0] = true;
j4valid[1] = true;
for(int ij4 = 0; ij4 < 2; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 2; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(j4);
dummyeval[0]=j4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=j4;
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[6];
IkReal x86=((cj7)*(npx));
IkReal x87=((npy)*(sj7));
evalcond[0]=j4;
evalcond[1]=((IkReal(-1.00000000000000))*(npz));
evalcond[2]=((((IkReal(-1.00000000000000))*(npx)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(npy))));
evalcond[3]=((IkReal(-0.000144000000000000))+(pp));
evalcond[4]=((IkReal(0.0120000000000000))+(x87)+(((IkReal(-1.00000000000000))*(x86))));
evalcond[5]=((IkReal(0.000144000000000000))+(((IkReal(0.0240000000000000))*(x87)))+(pp)+(((IkReal(-0.0240000000000000))*(x86))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  )
{
{
IkReal j6array[2], cj6array[2], sj6array[2];
bool j6valid[2]={false};
_nj6 = 2;
if( IKabs(npz) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.0120000000000000))+(((npy)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(npx))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x88=IKatan2(npz, ((IkReal(0.0120000000000000))+(((npy)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(npx)))));
j6array[0]=((IkReal(-1.00000000000000))*(x88));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
j6array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x88))));
sj6array[1]=IKsin(j6array[1]);
cj6array[1]=IKcos(j6array[1]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
if( j6array[1] > IKPI )
{
    j6array[1]-=IK2PI;
}
else if( j6array[1] < -IKPI )
{    j6array[1]+=IK2PI;
}
j6valid[1] = true;
for(int ij6 = 0; ij6 < 2; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 2; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[1];
IkReal x89=IKcos(j6);
evalcond[0]=((((npy)*(sj7)*(x89)))+(((IkReal(0.0120000000000000))*(x89)))+(((IkReal(-1.00000000000000))*(npz)*(IKsin(j6))))+(((IkReal(-1.00000000000000))*(cj7)*(npx)*(x89))));
if( IKabs(evalcond[0]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
IkReal x631=((IKabs(j4) != 0)?((IkReal)1/(j4)):(IkReal)1.0e30);
if( IKabs(((IkReal(-1.00000000000000))*(npz)*(x631))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(0.333333333333333))*(x631)*(((IkReal(0.0180000000000000))+(((IkReal(125.000000000000))*(((IKabs(x631) != 0)?((IkReal)1/((x631)*(x631))):(IkReal)1.0e30))))+(((IkReal(-125.000000000000))*(pp))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((IkReal(-1.00000000000000))*(npz)*(x631)))+IKsqr(((IkReal(0.333333333333333))*(x631)*(((IkReal(0.0180000000000000))+(((IkReal(125.000000000000))*(((IKabs(x631) != 0)?((IkReal)1/((x631)*(x631))):(IkReal)1.0e30))))+(((IkReal(-125.000000000000))*(pp)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j6array[0]=IKatan2(((IkReal(-1.00000000000000))*(npz)*(x631)), ((IkReal(0.333333333333333))*(x631)*(((IkReal(0.0180000000000000))+(((IkReal(125.000000000000))*(((IKabs(x631) != 0)?((IkReal)1/((x631)*(x631))):(IkReal)1.0e30))))+(((IkReal(-125.000000000000))*(pp)))))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
for(int ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[5];
IkReal x632=IKcos(j6);
IkReal x633=IKsin(j6);
IkReal x634=((IkReal(1.00000000000000))*(j4));
IkReal x635=((npy)*(sj7));
IkReal x636=((IkReal(1.00000000000000))*(npz));
IkReal x637=((IkReal(1.00000000000000))*(cj7)*(npx));
evalcond[0]=((((IkReal(-1.00000000000000))*(x633)*(x634)))+(((IkReal(-1.00000000000000))*(x636))));
evalcond[1]=((IkReal(-0.000144000000000000))+(((IkReal(-1.00000000000000))*(j4)*(x634)))+(((IkReal(0.0240000000000000))*(j4)*(x632)))+(pp));
evalcond[2]=((IkReal(0.0120000000000000))+(((IkReal(-1.00000000000000))*(x637)))+(x635)+(((IkReal(-1.00000000000000))*(x632)*(x634))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x633)*(x637)))+(((npz)*(x632)))+(((IkReal(0.0120000000000000))*(x633)))+(((x633)*(x635))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x633)*(x636)))+(((IkReal(-1.00000000000000))*(x634)))+(((IkReal(0.0120000000000000))*(x632)))+(((x632)*(x635)))+(((IkReal(-1.00000000000000))*(x632)*(x637))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j6array[1], cj6array[1], sj6array[1];
bool j6valid[1]={false};
_nj6 = 1;
if( IKabs(((IkReal(-1.00000000000000))*(gconst0)*(npz))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((IkReal(0.0120000000000000))+(((npy)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(npx))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j6array[0]=IKatan2(((IkReal(-1.00000000000000))*(gconst0)*(npz)), ((gconst0)*(((IkReal(0.0120000000000000))+(((npy)*(sj7)))+(((IkReal(-1.00000000000000))*(cj7)*(npx)))))));
sj6array[0]=IKsin(j6array[0]);
cj6array[0]=IKcos(j6array[0]);
if( j6array[0] > IKPI )
{
    j6array[0]-=IK2PI;
}
else if( j6array[0] < -IKPI )
{    j6array[0]+=IK2PI;
}
j6valid[0] = true;
for(int ij6 = 0; ij6 < 1; ++ij6)
{
if( !j6valid[ij6] )
{
    continue;
}
_ij6[0] = ij6; _ij6[1] = -1;
for(int iij6 = ij6+1; iij6 < 1; ++iij6)
{
if( j6valid[iij6] && IKabs(cj6array[ij6]-cj6array[iij6]) < IKFAST_SOLUTION_THRESH && IKabs(sj6array[ij6]-sj6array[iij6]) < IKFAST_SOLUTION_THRESH )
{
    j6valid[iij6]=false; _ij6[1] = iij6; break; 
}
}
j6 = j6array[ij6]; cj6 = cj6array[ij6]; sj6 = sj6array[ij6];
{
IkReal evalcond[5];
IkReal x638=IKcos(j6);
IkReal x639=IKsin(j6);
IkReal x640=((IkReal(1.00000000000000))*(j4));
IkReal x641=((npy)*(sj7));
IkReal x642=((IkReal(1.00000000000000))*(npz));
IkReal x643=((IkReal(1.00000000000000))*(cj7)*(npx));
evalcond[0]=((((IkReal(-1.00000000000000))*(x639)*(x640)))+(((IkReal(-1.00000000000000))*(x642))));
evalcond[1]=((IkReal(-0.000144000000000000))+(((IkReal(0.0240000000000000))*(j4)*(x638)))+(pp)+(((IkReal(-1.00000000000000))*(j4)*(x640))));
evalcond[2]=((IkReal(0.0120000000000000))+(((IkReal(-1.00000000000000))*(x643)))+(x641)+(((IkReal(-1.00000000000000))*(x638)*(x640))));
evalcond[3]=((((x639)*(x641)))+(((IkReal(-1.00000000000000))*(x639)*(x643)))+(((npz)*(x638)))+(((IkReal(0.0120000000000000))*(x639))));
evalcond[4]=((((x638)*(x641)))+(((IkReal(-1.00000000000000))*(x639)*(x642)))+(((IkReal(0.0120000000000000))*(x638)))+(((IkReal(-1.00000000000000))*(x640)))+(((IkReal(-1.00000000000000))*(x638)*(x643))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}
}
}
}
return solutions.GetNumSolutions()>0;
}
inline void rotationfunction0(IkSolutionListBase<IkReal>& solutions) {
for(int rotationiter = 0; rotationiter < 1; ++rotationiter) {
IkReal x90=((IkReal(1.00000000000000))*(sj7));
IkReal x91=((IkReal(1.00000000000000))*(r22));
IkReal x92=((IkReal(1.00000000000000))*(cj6));
IkReal x93=((IkReal(1.00000000000000))*(sj6));
IkReal x94=((((cj7)*(r00)))+(((IkReal(-1.00000000000000))*(r01)*(x90))));
IkReal x95=((((IkReal(-1.00000000000000))*(r11)*(x90)))+(((cj7)*(r10))));
IkReal x96=((((IkReal(-1.00000000000000))*(r21)*(x90)))+(((cj7)*(r20))));
new_r00=((((r00)*(sj7)))+(((cj7)*(r01))));
new_r01=((((sj6)*(x94)))+(((IkReal(-1.00000000000000))*(r02)*(x92))));
new_r02=((((IkReal(-1.00000000000000))*(x92)*(x94)))+(((IkReal(-1.00000000000000))*(r02)*(x93))));
new_r10=((((r10)*(sj7)))+(((cj7)*(r11))));
new_r11=((((IkReal(-1.00000000000000))*(r12)*(x92)))+(((sj6)*(x95))));
new_r12=((((IkReal(-1.00000000000000))*(r12)*(x93)))+(((IkReal(-1.00000000000000))*(x92)*(x95))));
new_r20=((((cj7)*(r21)))+(((r20)*(sj7))));
new_r21=((((sj6)*(x96)))+(((IkReal(-1.00000000000000))*(cj6)*(x91))));
new_r22=((((IkReal(-1.00000000000000))*(sj6)*(x91)))+(((IkReal(-1.00000000000000))*(x92)*(x96))));
{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
cj3array[0]=((IkReal(0.209764420180451))+(((IkReal(1.31447610405708))*(new_r22))));
if( cj3array[0] >= -1-IKFAST_SINCOS_THRESH && cj3array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j3valid[0] = j3valid[1] = true;
    j3array[0] = IKacos(cj3array[0]);
    sj3array[0] = IKsin(j3array[0]);
    cj3array[1] = cj3array[0];
    j3array[1] = -j3array[0];
    sj3array[1] = -sj3array[0];
}
else if( isnan(cj3array[0]) )
{
    // probably any value will work
    j3valid[0] = true;
    cj3array[0] = 1; sj3array[0] = 0; j3array[0] = 0;
}
for(int ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];

{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((IkReal(26009383.3022175))+(((IkReal(151753492.647519))*(cj3)))+(((IkReal(583077609.000000))*((sj3)*(sj3))))+(((IkReal(221353984.667113))*((cj3)*(cj3))))));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(22.4179713230759))*((sj3)*(sj3))))+(((IkReal(8.51054337179311))*((cj3)*(cj3))))+(((IkReal(5.83456712080446))*(cj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign((((new_r12)*(new_r12))+((new_r02)*(new_r02))));
dummyeval[0]=(((new_r12)*(new_r12))+((new_r02)*(new_r02)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign(((((IkReal(-0.555366241559602))*(new_r12)))+(((IkReal(-0.213852473949526))*(new_r02)))+(((IkReal(-0.0733053436601961))*(cj3)*(new_r02)))+(((IkReal(-0.735025137662126))*(new_r02)*(sj3)))+(((IkReal(-0.190371018127230))*(cj3)*(new_r12)))+(((IkReal(0.283032947164231))*(new_r12)*(sj3)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*(cj3)*(new_r02)))+(((IkReal(-7.57606763476861))*(new_r12)))+(((IkReal(-2.91728356040223))*(new_r02)))+(((IkReal(3.86101385018013))*(new_r12)*(sj3)))+(((IkReal(-10.0268970986522))*(new_r02)*(sj3)))+(((IkReal(-2.59695962970567))*(cj3)*(new_r12))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x97=(sj3)*(sj3);
IkReal x98=(cj3)*(cj3);
IkReal x99=((cj3)*(sj3));
if( IKabs(((gconst2)*(((IkReal(-0.308431662264038))+(((IkReal(-0.0362411245427980))*(x98)))+((new_r02)*(new_r02))+(((IkReal(0.107762540630410))*(x99)))+(((IkReal(0.314373888208273))*(sj3)))+(((IkReal(-0.0801076491804705))*(x97)))+(((IkReal(-0.211451273678389))*(cj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((IkReal(-0.118766444705571))+(((IkReal(-0.0814226263895962))*(cj3)))+(((IkReal(-0.0139552129067580))*(x98)))+(((IkReal(-0.119179656346814))*(x99)))+(((IkReal(0.208036330952306))*(x97)))+(((IkReal(-1.00000000000000))*(new_r02)*(new_r12)))+(((IkReal(-0.347680852194947))*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst2)*(((IkReal(-0.308431662264038))+(((IkReal(-0.0362411245427980))*(x98)))+((new_r02)*(new_r02))+(((IkReal(0.107762540630410))*(x99)))+(((IkReal(0.314373888208273))*(sj3)))+(((IkReal(-0.0801076491804705))*(x97)))+(((IkReal(-0.211451273678389))*(cj3)))))), ((gconst2)*(((IkReal(-0.118766444705571))+(((IkReal(-0.0814226263895962))*(cj3)))+(((IkReal(-0.0139552129067580))*(x98)))+(((IkReal(-0.119179656346814))*(x99)))+(((IkReal(0.208036330952306))*(x97)))+(((IkReal(-1.00000000000000))*(new_r02)*(new_r12)))+(((IkReal(-0.347680852194947))*(sj3)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[7];
IkReal x100=IKcos(j2);
IkReal x101=IKsin(j2);
IkReal x102=((IkReal(0.190371018127230))*(cj3));
IkReal x103=((IkReal(0.933204742898924))*(new_r02));
IkReal x104=((IkReal(0.0733053436601961))*(cj3));
IkReal x105=((IkReal(0.359345109652202))*(sj3));
IkReal x106=((IkReal(0.735025137662126))*(sj3));
IkReal x107=((IkReal(0.241699403086935))*(sj3));
IkReal x108=((IkReal(0.0930701426091587))*(new_r02));
IkReal x109=((IkReal(0.965877501084962))*(new_r22));
IkReal x110=((IkReal(0.283032947164231))*(sj3));
IkReal x111=((IkReal(0.241699403086935))*(cj3));
IkReal x112=((IkReal(0.359345109652202))*(cj3));
IkReal x113=((new_r12)*(x101));
IkReal x114=((cj3)*(x101));
IkReal x115=((new_r02)*(x100));
IkReal x116=((sj3)*(x101));
IkReal x117=((new_r02)*(x101));
IkReal x118=((new_r12)*(x100));
evalcond[0]=((IkReal(-0.555366241559602))+(((IkReal(-1.00000000000000))*(x102)))+(x113)+(x110)+(x115));
evalcond[1]=((IkReal(-0.213852473949526))+(((IkReal(-1.00000000000000))*(x106)))+(((IkReal(-1.00000000000000))*(x104)))+(x118)+(((IkReal(-1.00000000000000))*(x117))));
evalcond[2]=((IkReal(0.616141540414459))+(((IkReal(0.347083356537970))*(x117)))+(((IkReal(-0.347083356537970))*(x118)))+(((IkReal(0.258999329917800))*(new_r22)))+(((IkReal(-0.901361465071847))*(x115)))+(((IkReal(-0.901361465071847))*(x113))));
evalcond[3]=((((x100)*(x110)))+(((IkReal(-1.00000000000000))*(x100)*(x102)))+(((IkReal(-0.555366241559602))*(x100)))+(((IkReal(0.213852473949526))*(x101)))+(new_r02)+(((x101)*(x104)))+(((x101)*(x106))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x101)*(x102)))+(((IkReal(-1.00000000000000))*(x100)*(x106)))+(((IkReal(-1.00000000000000))*(x100)*(x104)))+(((IkReal(-0.555366241559602))*(x101)))+(new_r12)+(((x101)*(x110)))+(((IkReal(-0.213852473949526))*(x100))));
evalcond[5]=((((IkReal(-0.0930701426091587))*(sj3)*(x118)))+(((IkReal(-1.00000000000000))*(sj3)*(x109)))+(((IkReal(-1.00000000000000))*(x112)*(x113)))+(((IkReal(-1.00000000000000))*(x112)*(x115)))+(((IkReal(-1.00000000000000))*(x107)*(x115)))+(((IkReal(-1.00000000000000))*(x107)*(x113)))+(((IkReal(0.933204742898924))*(cj3)*(x118)))+(((x108)*(x116)))+(((IkReal(-1.00000000000000))*(x103)*(x114))));
evalcond[6]=((IkReal(0.787635450050147))+(((IkReal(-1.00000000000000))*(x111)*(x113)))+(((IkReal(-1.00000000000000))*(x111)*(x115)))+(((IkReal(-1.00000000000000))*(cj3)*(x109)))+(((IkReal(-0.933204742898924))*(sj3)*(x118)))+(((x103)*(x116)))+(((x108)*(x114)))+(((IkReal(-0.0930701426091587))*(cj3)*(x118)))+(((x105)*(x113)))+(((x105)*(x115))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((IkReal(26009383.3022175))+(((IkReal(151753492.647519))*(cj3)))+(((IkReal(583077609.000000))*((sj3)*(sj3))))+(((IkReal(221353984.667113))*((cj3)*(cj3))))));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(22.4179713230759))*((sj3)*(sj3))))+(((IkReal(8.51054337179311))*((cj3)*(cj3))))+(((IkReal(5.83456712080446))*(cj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.91728356040223))*(cj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.91728356040223))*(cj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x119=((new_r10)*(sj2));
IkReal x120=((new_r00)*(sj3));
IkReal x121=((cj2)*(new_r10));
if( IKabs(((((IkReal(-0.440664975803047))*(x121)))+(((IkReal(-1.14438915238574))*(x119)))+(((IkReal(0.440664975803047))*(new_r00)*(sj2)))+(((IkReal(0.328831478955538))*(new_r20)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-7195817128642.64))*(sj3)*(x121)))+(((IkReal(-16906337479700.0))*(new_r21)))+(((IkReal(-18687246585829.5))*(cj2)*(x120)))+(((IkReal(7195817128642.64))*(sj2)*(x120)))+(((IkReal(-18687246585829.5))*(sj3)*(x119)))+(((IkReal(5369637522004.29))*(new_r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-0.440664975803047))*(x121)))+(((IkReal(-1.14438915238574))*(x119)))+(((IkReal(0.440664975803047))*(new_r00)*(sj2)))+(((IkReal(0.328831478955538))*(new_r20)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r00)))))+IKsqr(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-7195817128642.64))*(sj3)*(x121)))+(((IkReal(-16906337479700.0))*(new_r21)))+(((IkReal(-18687246585829.5))*(cj2)*(x120)))+(((IkReal(7195817128642.64))*(sj2)*(x120)))+(((IkReal(-18687246585829.5))*(sj3)*(x119)))+(((IkReal(5369637522004.29))*(new_r20)*(sj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-0.440664975803047))*(x121)))+(((IkReal(-1.14438915238574))*(x119)))+(((IkReal(0.440664975803047))*(new_r00)*(sj2)))+(((IkReal(0.328831478955538))*(new_r20)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r00)))), ((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-7195817128642.64))*(sj3)*(x121)))+(((IkReal(-16906337479700.0))*(new_r21)))+(((IkReal(-18687246585829.5))*(cj2)*(x120)))+(((IkReal(7195817128642.64))*(sj2)*(x120)))+(((IkReal(-18687246585829.5))*(sj3)*(x119)))+(((IkReal(5369637522004.29))*(new_r20)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[16];
IkReal x122=IKsin(j5);
IkReal x123=IKcos(j5);
IkReal x124=((IkReal(0.965877501084962))*(sj3));
IkReal x125=((new_r10)*(sj2));
IkReal x126=((IkReal(0.359345109652202))*(sj2));
IkReal x127=((IkReal(1.00000000000000))*(sj2));
IkReal x128=((cj2)*(cj3));
IkReal x129=((IkReal(0.359345109652202))*(new_r00));
IkReal x130=((cj2)*(new_r01));
IkReal x131=((cj2)*(new_r11));
IkReal x132=((IkReal(0.965877501084962))*(cj3));
IkReal x133=((IkReal(0.709944243199724))*(cj2));
IkReal x134=((IkReal(0.359345109652202))*(sj3));
IkReal x135=((IkReal(0.0573443810338005))*(sj2));
IkReal x136=((IkReal(0.241699403086935))*(new_r00));
IkReal x137=((IkReal(0.709944243199724))*(sj2));
IkReal x138=((cj2)*(new_r10));
IkReal x139=((new_r11)*(sj2));
IkReal x140=((cj2)*(new_r00));
IkReal x141=((new_r00)*(sj2));
IkReal x142=((cj2)*(sj3));
IkReal x143=((IkReal(0.241699403086935))*(cj3));
IkReal x144=((IkReal(0.0930701426091587))*(sj2));
IkReal x145=((IkReal(0.241699403086935))*(sj3));
IkReal x146=((IkReal(0.933204742898924))*(sj3));
IkReal x147=((IkReal(0.0930701426091587))*(sj3));
IkReal x148=((cj3)*(new_r01));
IkReal x149=((IkReal(0.933204742898924))*(sj2));
IkReal x150=((cj3)*(sj2));
IkReal x151=((cj3)*(x123));
IkReal x152=((IkReal(0.933204742898924))*(x122));
IkReal x153=((sj3)*(x122));
IkReal x154=((IkReal(0.273375155731700))*(x122));
IkReal x155=((IkReal(0.148921042535239))*(x122));
IkReal x156=((cj3)*(x122));
IkReal x157=((sj3)*(x123));
IkReal x158=((new_r01)*(sj2)*(sj3));
IkReal x159=((IkReal(0.273375155731700))*(x123));
IkReal x160=((x123)*(x142));
IkReal x161=((sj2)*(x157));
evalcond[0]=((((IkReal(-0.203997053782493))*(x122)))+(((x123)*(x124)))+(((IkReal(-0.595117251370157))*(x156)))+(new_r20));
evalcond[1]=((((IkReal(-0.203997053782493))*(x123)))+(((IkReal(-0.595117251370157))*(x151)))+(new_r21)+(((IkReal(-1.00000000000000))*(x122)*(x124))));
evalcond[2]=((((IkReal(0.347083356537970))*(x141)))+(((IkReal(-0.901361465071847))*(x140)))+(((IkReal(-0.347083356537970))*(x138)))+(((IkReal(0.258999329917800))*(new_r20)))+(((IkReal(-0.787635450050147))*(x122)))+(((IkReal(-0.901361465071847))*(x125))));
evalcond[3]=((((IkReal(0.347083356537970))*(new_r01)*(sj2)))+(((IkReal(-0.347083356537970))*(x131)))+(((IkReal(0.258999329917800))*(new_r21)))+(((IkReal(-0.787635450050147))*(x123)))+(((IkReal(-0.901361465071847))*(x139)))+(((IkReal(-0.901361465071847))*(x130))));
evalcond[4]=((((IkReal(0.359345109652202))*(x151)))+(((x123)*(x145)))+(((IkReal(0.221407449401510))*(x153)))+(x140)+(x125)+(((IkReal(-1.00000000000000))*(cj3)*(x155)))+(((IkReal(0.709944243199724))*(x122))));
evalcond[5]=((((IkReal(-0.359345109652202))*(x156)))+(((IkReal(0.221407449401510))*(x157)))+(((IkReal(-1.00000000000000))*(x122)*(x145)))+(x130)+(x139)+(((IkReal(0.709944243199724))*(x123)))+(((IkReal(-0.148921042535239))*(x151))));
evalcond[6]=((((x123)*(x147)))+(((IkReal(-1.00000000000000))*(new_r00)*(x127)))+(((IkReal(-0.933204742898924))*(x151)))+(x154)+(x138)+(((IkReal(-0.574986207811823))*(x153)))+(((IkReal(-0.0573443810338005))*(x156))));
evalcond[7]=((((IkReal(-1.00000000000000))*(new_r01)*(x127)))+(((cj3)*(x152)))+(((IkReal(-1.00000000000000))*(x122)*(x147)))+(x159)+(x131)+(((IkReal(-0.574986207811823))*(x157)))+(((IkReal(-0.0573443810338005))*(x151))));
evalcond[8]=((((IkReal(-0.359345109652202))*(new_r01)*(x128)))+(((IkReal(0.933204742898924))*(new_r11)*(x128)))+(((IkReal(-1.00000000000000))*(x131)*(x147)))+(((IkReal(-1.00000000000000))*(new_r21)*(x124)))+(((IkReal(-1.00000000000000))*(x139)*(x145)))+(x122)+(((new_r01)*(sj3)*(x144)))+(((IkReal(-1.00000000000000))*(x148)*(x149)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r11)*(x126)))+(((IkReal(-1.00000000000000))*(x130)*(x145))));
evalcond[9]=((((IkReal(-1.00000000000000))*(x138)*(x147)))+(((IkReal(-1.00000000000000))*(x125)*(x145)))+(((IkReal(-1.00000000000000))*(x128)*(x129)))+(((IkReal(-0.359345109652202))*(cj3)*(x125)))+(((x141)*(x147)))+(((IkReal(-1.00000000000000))*(new_r20)*(x124)))+(((IkReal(-0.933204742898924))*(cj3)*(x141)))+(((IkReal(-1.00000000000000))*(x123)))+(((IkReal(-1.00000000000000))*(x136)*(x142)))+(((IkReal(0.933204742898924))*(new_r10)*(x128))));
evalcond[10]=((((IkReal(-1.00000000000000))*(x138)*(x146)))+(((IkReal(-1.00000000000000))*(x125)*(x143)))+(((IkReal(-1.00000000000000))*(x128)*(x136)))+(((IkReal(-1.00000000000000))*(new_r20)*(x132)))+(((x129)*(x142)))+(((x141)*(x146)))+(((x125)*(x134)))+(((IkReal(0.0930701426091587))*(cj3)*(x141)))+(((IkReal(-0.0930701426091587))*(new_r10)*(x128)))+(((IkReal(0.616141540414459))*(x122))));
evalcond[11]=((((IkReal(-1.00000000000000))*(x131)*(x146)))+(((new_r11)*(sj3)*(x126)))+(((x144)*(x148)))+(((IkReal(-1.00000000000000))*(x139)*(x143)))+(((IkReal(-0.241699403086935))*(new_r01)*(x128)))+(((IkReal(-1.00000000000000))*(new_r21)*(x132)))+(((x130)*(x134)))+(((IkReal(-0.0930701426091587))*(new_r11)*(x128)))+(((new_r01)*(sj2)*(x146)))+(((IkReal(0.616141540414459))*(x123))));
evalcond[12]=((((x149)*(x151)))+(((IkReal(0.359345109652202))*(x123)*(x128)))+(((IkReal(-1.00000000000000))*(x144)*(x157)))+(((IkReal(-1.00000000000000))*(x128)*(x155)))+(((x122)*(x133)))+(((x135)*(x156)))+(((IkReal(0.574986207811823))*(sj2)*(x153)))+(((IkReal(-1.00000000000000))*(sj2)*(x154)))+(((IkReal(0.241699403086935))*(x160)))+(new_r00)+(((IkReal(0.221407449401510))*(x122)*(x142))));
evalcond[13]=((((IkReal(-0.359345109652202))*(x122)*(x128)))+(((IkReal(0.221407449401510))*(x160)))+(((IkReal(-0.148921042535239))*(x123)*(x128)))+(((x144)*(x153)))+(((x135)*(x151)))+(((IkReal(0.574986207811823))*(x161)))+(((x123)*(x133)))+(((IkReal(-0.241699403086935))*(x122)*(x142)))+(((IkReal(-1.00000000000000))*(sj2)*(x159)))+(new_r01)+(((IkReal(-1.00000000000000))*(x149)*(x156))));
evalcond[14]=((((IkReal(-0.574986207811823))*(x122)*(x142)))+(((x126)*(x151)))+(((IkReal(-1.00000000000000))*(x150)*(x155)))+(((cj2)*(x154)))+(((x122)*(x137)))+(((IkReal(-0.0573443810338005))*(x122)*(x128)))+(((IkReal(0.0930701426091587))*(x160)))+(new_r10)+(((sj2)*(x123)*(x145)))+(((IkReal(-0.933204742898924))*(x123)*(x128)))+(((IkReal(0.221407449401510))*(sj2)*(x153))));
evalcond[15]=((((IkReal(-1.00000000000000))*(sj2)*(x122)*(x145)))+(((IkReal(-0.148921042535239))*(x123)*(x150)))+(((IkReal(0.221407449401510))*(x161)))+(((IkReal(-0.0930701426091587))*(x122)*(x142)))+(((x128)*(x152)))+(((cj2)*(x159)))+(((IkReal(-0.0573443810338005))*(x123)*(x128)))+(((x123)*(x137)))+(((IkReal(-1.00000000000000))*(x126)*(x156)))+(((IkReal(-0.574986207811823))*(x160)))+(new_r11));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x162=((new_r01)*(sj2));
IkReal x163=((cj2)*(sj3));
IkReal x164=((new_r11)*(sj2));
if( IKabs(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-5369637522004.29))*(new_r21)*(sj3)))+(((IkReal(18687246585829.5))*(sj3)*(x164)))+(((IkReal(-16906337479700.0))*(new_r20)))+(((IkReal(-7195817128642.64))*(sj3)*(x162)))+(((IkReal(7195817128642.64))*(new_r11)*(x163)))+(((IkReal(18687246585829.5))*(new_r01)*(x163))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.14438915238574))*(x164)))+(((IkReal(0.440664975803047))*(x162)))+(((IkReal(0.328831478955538))*(new_r21)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r01)))+(((IkReal(-0.440664975803047))*(cj2)*(new_r11))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-5369637522004.29))*(new_r21)*(sj3)))+(((IkReal(18687246585829.5))*(sj3)*(x164)))+(((IkReal(-16906337479700.0))*(new_r20)))+(((IkReal(-7195817128642.64))*(sj3)*(x162)))+(((IkReal(7195817128642.64))*(new_r11)*(x163)))+(((IkReal(18687246585829.5))*(new_r01)*(x163)))))))+IKsqr(((((IkReal(-1.14438915238574))*(x164)))+(((IkReal(0.440664975803047))*(x162)))+(((IkReal(0.328831478955538))*(new_r21)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r01)))+(((IkReal(-0.440664975803047))*(cj2)*(new_r11)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-5369637522004.29))*(new_r21)*(sj3)))+(((IkReal(18687246585829.5))*(sj3)*(x164)))+(((IkReal(-16906337479700.0))*(new_r20)))+(((IkReal(-7195817128642.64))*(sj3)*(x162)))+(((IkReal(7195817128642.64))*(new_r11)*(x163)))+(((IkReal(18687246585829.5))*(new_r01)*(x163)))))), ((((IkReal(-1.14438915238574))*(x164)))+(((IkReal(0.440664975803047))*(x162)))+(((IkReal(0.328831478955538))*(new_r21)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r01)))+(((IkReal(-0.440664975803047))*(cj2)*(new_r11)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[16];
IkReal x165=IKsin(j5);
IkReal x166=IKcos(j5);
IkReal x167=((IkReal(0.965877501084962))*(sj3));
IkReal x168=((new_r10)*(sj2));
IkReal x169=((IkReal(0.359345109652202))*(sj2));
IkReal x170=((IkReal(1.00000000000000))*(sj2));
IkReal x171=((cj2)*(cj3));
IkReal x172=((IkReal(0.359345109652202))*(new_r00));
IkReal x173=((cj2)*(new_r01));
IkReal x174=((cj2)*(new_r11));
IkReal x175=((IkReal(0.965877501084962))*(cj3));
IkReal x176=((IkReal(0.709944243199724))*(cj2));
IkReal x177=((IkReal(0.359345109652202))*(sj3));
IkReal x178=((IkReal(0.0573443810338005))*(sj2));
IkReal x179=((IkReal(0.241699403086935))*(new_r00));
IkReal x180=((IkReal(0.709944243199724))*(sj2));
IkReal x181=((cj2)*(new_r10));
IkReal x182=((new_r11)*(sj2));
IkReal x183=((cj2)*(new_r00));
IkReal x184=((new_r00)*(sj2));
IkReal x185=((cj2)*(sj3));
IkReal x186=((IkReal(0.241699403086935))*(cj3));
IkReal x187=((IkReal(0.0930701426091587))*(sj2));
IkReal x188=((IkReal(0.241699403086935))*(sj3));
IkReal x189=((IkReal(0.933204742898924))*(sj3));
IkReal x190=((IkReal(0.0930701426091587))*(sj3));
IkReal x191=((cj3)*(new_r01));
IkReal x192=((IkReal(0.933204742898924))*(sj2));
IkReal x193=((cj3)*(sj2));
IkReal x194=((cj3)*(x166));
IkReal x195=((IkReal(0.933204742898924))*(x165));
IkReal x196=((sj3)*(x165));
IkReal x197=((IkReal(0.273375155731700))*(x165));
IkReal x198=((IkReal(0.148921042535239))*(x165));
IkReal x199=((cj3)*(x165));
IkReal x200=((sj3)*(x166));
IkReal x201=((new_r01)*(sj2)*(sj3));
IkReal x202=((IkReal(0.273375155731700))*(x166));
IkReal x203=((x166)*(x185));
IkReal x204=((sj2)*(x200));
evalcond[0]=((((x166)*(x167)))+(((IkReal(-0.203997053782493))*(x165)))+(((IkReal(-0.595117251370157))*(x199)))+(new_r20));
evalcond[1]=((((IkReal(-0.203997053782493))*(x166)))+(((IkReal(-0.595117251370157))*(x194)))+(new_r21)+(((IkReal(-1.00000000000000))*(x165)*(x167))));
evalcond[2]=((((IkReal(-0.347083356537970))*(x181)))+(((IkReal(-0.901361465071847))*(x168)))+(((IkReal(-0.901361465071847))*(x183)))+(((IkReal(-0.787635450050147))*(x165)))+(((IkReal(0.258999329917800))*(new_r20)))+(((IkReal(0.347083356537970))*(x184))));
evalcond[3]=((((IkReal(0.347083356537970))*(new_r01)*(sj2)))+(((IkReal(-0.347083356537970))*(x174)))+(((IkReal(-0.901361465071847))*(x182)))+(((IkReal(-0.901361465071847))*(x173)))+(((IkReal(-0.787635450050147))*(x166)))+(((IkReal(0.258999329917800))*(new_r21))));
evalcond[4]=((((IkReal(0.359345109652202))*(x194)))+(((IkReal(0.221407449401510))*(x196)))+(x168)+(x183)+(((x166)*(x188)))+(((IkReal(0.709944243199724))*(x165)))+(((IkReal(-1.00000000000000))*(cj3)*(x198))));
evalcond[5]=((((IkReal(-0.359345109652202))*(x199)))+(((IkReal(-0.148921042535239))*(x194)))+(((IkReal(0.221407449401510))*(x200)))+(x173)+(x182)+(((IkReal(0.709944243199724))*(x166)))+(((IkReal(-1.00000000000000))*(x165)*(x188))));
evalcond[6]=((((x166)*(x190)))+(x197)+(x181)+(((IkReal(-0.933204742898924))*(x194)))+(((IkReal(-0.574986207811823))*(x196)))+(((IkReal(-0.0573443810338005))*(x199)))+(((IkReal(-1.00000000000000))*(new_r00)*(x170))));
evalcond[7]=((x174)+(x202)+(((cj3)*(x195)))+(((IkReal(-0.574986207811823))*(x200)))+(((IkReal(-0.0573443810338005))*(x194)))+(((IkReal(-1.00000000000000))*(x165)*(x190)))+(((IkReal(-1.00000000000000))*(new_r01)*(x170))));
evalcond[8]=((((IkReal(-1.00000000000000))*(new_r21)*(x167)))+(((IkReal(-1.00000000000000))*(x191)*(x192)))+(x165)+(((IkReal(0.933204742898924))*(new_r11)*(x171)))+(((IkReal(-0.359345109652202))*(new_r01)*(x171)))+(((new_r01)*(sj3)*(x187)))+(((IkReal(-1.00000000000000))*(x173)*(x188)))+(((IkReal(-1.00000000000000))*(x174)*(x190)))+(((IkReal(-1.00000000000000))*(x182)*(x188)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r11)*(x169))));
evalcond[9]=((((IkReal(-0.359345109652202))*(cj3)*(x168)))+(((IkReal(-1.00000000000000))*(new_r20)*(x167)))+(((x184)*(x190)))+(((IkReal(-1.00000000000000))*(x168)*(x188)))+(((IkReal(-1.00000000000000))*(x166)))+(((IkReal(-1.00000000000000))*(x171)*(x172)))+(((IkReal(-0.933204742898924))*(cj3)*(x184)))+(((IkReal(0.933204742898924))*(new_r10)*(x171)))+(((IkReal(-1.00000000000000))*(x179)*(x185)))+(((IkReal(-1.00000000000000))*(x181)*(x190))));
evalcond[10]=((((x172)*(x185)))+(((IkReal(-0.0930701426091587))*(new_r10)*(x171)))+(((x168)*(x177)))+(((IkReal(-1.00000000000000))*(new_r20)*(x175)))+(((IkReal(-1.00000000000000))*(x168)*(x186)))+(((x184)*(x189)))+(((IkReal(-1.00000000000000))*(x171)*(x179)))+(((IkReal(0.616141540414459))*(x165)))+(((IkReal(-1.00000000000000))*(x181)*(x189)))+(((IkReal(0.0930701426091587))*(cj3)*(x184))));
evalcond[11]=((((IkReal(-0.241699403086935))*(new_r01)*(x171)))+(((IkReal(-1.00000000000000))*(new_r21)*(x175)))+(((x187)*(x191)))+(((x173)*(x177)))+(((IkReal(-0.0930701426091587))*(new_r11)*(x171)))+(((new_r11)*(sj3)*(x169)))+(((IkReal(0.616141540414459))*(x166)))+(((IkReal(-1.00000000000000))*(x182)*(x186)))+(((IkReal(-1.00000000000000))*(x174)*(x189)))+(((new_r01)*(sj2)*(x189))));
evalcond[12]=((((IkReal(-1.00000000000000))*(x187)*(x200)))+(((x178)*(x199)))+(((IkReal(-1.00000000000000))*(x171)*(x198)))+(((x192)*(x194)))+(((x165)*(x176)))+(((IkReal(-1.00000000000000))*(sj2)*(x197)))+(((IkReal(0.221407449401510))*(x165)*(x185)))+(new_r00)+(((IkReal(0.241699403086935))*(x203)))+(((IkReal(0.574986207811823))*(sj2)*(x196)))+(((IkReal(0.359345109652202))*(x166)*(x171))));
evalcond[13]=((((IkReal(-0.241699403086935))*(x165)*(x185)))+(((IkReal(-1.00000000000000))*(x192)*(x199)))+(((x187)*(x196)))+(((x178)*(x194)))+(((IkReal(0.221407449401510))*(x203)))+(((IkReal(-0.359345109652202))*(x165)*(x171)))+(((x166)*(x176)))+(((IkReal(-0.148921042535239))*(x166)*(x171)))+(new_r01)+(((IkReal(-1.00000000000000))*(sj2)*(x202)))+(((IkReal(0.574986207811823))*(x204))));
evalcond[14]=((((x169)*(x194)))+(((IkReal(-0.0573443810338005))*(x165)*(x171)))+(((IkReal(-0.574986207811823))*(x165)*(x185)))+(((cj2)*(x197)))+(((sj2)*(x166)*(x188)))+(((x165)*(x180)))+(new_r10)+(((IkReal(-1.00000000000000))*(x193)*(x198)))+(((IkReal(0.0930701426091587))*(x203)))+(((IkReal(-0.933204742898924))*(x166)*(x171)))+(((IkReal(0.221407449401510))*(sj2)*(x196))));
evalcond[15]=((((cj2)*(x202)))+(((IkReal(-0.0573443810338005))*(x166)*(x171)))+(((IkReal(0.221407449401510))*(x204)))+(((x166)*(x180)))+(((IkReal(-1.00000000000000))*(sj2)*(x165)*(x188)))+(((IkReal(-1.00000000000000))*(x169)*(x199)))+(((x171)*(x195)))+(((IkReal(-0.574986207811823))*(x203)))+(((IkReal(-0.148921042535239))*(x166)*(x193)))+(new_r11)+(((IkReal(-0.0930701426091587))*(x165)*(x185))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x205=((IkReal(603676561.825940))*(sj3));
IkReal x206=((IkReal(371950206.715539))*(cj3));
if( IKabs(((gconst4)*(((((new_r21)*(x205)))+(((IkReal(127498818.340530))*(new_r20)))+(((new_r20)*(x206))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-1.00000000000000))*(new_r20)*(x205)))+(((new_r21)*(x206)))+(((IkReal(127498818.340530))*(new_r21))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(((((new_r21)*(x205)))+(((IkReal(127498818.340530))*(new_r20)))+(((new_r20)*(x206)))))), ((gconst4)*(((((IkReal(-1.00000000000000))*(new_r20)*(x205)))+(((new_r21)*(x206)))+(((IkReal(127498818.340530))*(new_r21)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[16];
IkReal x207=IKsin(j5);
IkReal x208=IKcos(j5);
IkReal x209=((IkReal(0.965877501084962))*(sj3));
IkReal x210=((new_r10)*(sj2));
IkReal x211=((IkReal(0.359345109652202))*(sj2));
IkReal x212=((IkReal(1.00000000000000))*(sj2));
IkReal x213=((cj2)*(cj3));
IkReal x214=((IkReal(0.359345109652202))*(new_r00));
IkReal x215=((cj2)*(new_r01));
IkReal x216=((cj2)*(new_r11));
IkReal x217=((IkReal(0.965877501084962))*(cj3));
IkReal x218=((IkReal(0.709944243199724))*(cj2));
IkReal x219=((IkReal(0.359345109652202))*(sj3));
IkReal x220=((IkReal(0.0573443810338005))*(sj2));
IkReal x221=((IkReal(0.241699403086935))*(new_r00));
IkReal x222=((IkReal(0.709944243199724))*(sj2));
IkReal x223=((cj2)*(new_r10));
IkReal x224=((new_r11)*(sj2));
IkReal x225=((cj2)*(new_r00));
IkReal x226=((new_r00)*(sj2));
IkReal x227=((cj2)*(sj3));
IkReal x228=((IkReal(0.241699403086935))*(cj3));
IkReal x229=((IkReal(0.0930701426091587))*(sj2));
IkReal x230=((IkReal(0.241699403086935))*(sj3));
IkReal x231=((IkReal(0.933204742898924))*(sj3));
IkReal x232=((IkReal(0.0930701426091587))*(sj3));
IkReal x233=((cj3)*(new_r01));
IkReal x234=((IkReal(0.933204742898924))*(sj2));
IkReal x235=((cj3)*(sj2));
IkReal x236=((cj3)*(x208));
IkReal x237=((IkReal(0.933204742898924))*(x207));
IkReal x238=((sj3)*(x207));
IkReal x239=((IkReal(0.273375155731700))*(x207));
IkReal x240=((IkReal(0.148921042535239))*(x207));
IkReal x241=((cj3)*(x207));
IkReal x242=((sj3)*(x208));
IkReal x243=((new_r01)*(sj2)*(sj3));
IkReal x244=((IkReal(0.273375155731700))*(x208));
IkReal x245=((x208)*(x227));
IkReal x246=((sj2)*(x242));
evalcond[0]=((((IkReal(-0.203997053782493))*(x207)))+(((IkReal(-0.595117251370157))*(x241)))+(new_r20)+(((x208)*(x209))));
evalcond[1]=((((IkReal(-0.203997053782493))*(x208)))+(((IkReal(-1.00000000000000))*(x207)*(x209)))+(((IkReal(-0.595117251370157))*(x236)))+(new_r21));
evalcond[2]=((((IkReal(0.347083356537970))*(x226)))+(((IkReal(-0.787635450050147))*(x207)))+(((IkReal(-0.901361465071847))*(x225)))+(((IkReal(0.258999329917800))*(new_r20)))+(((IkReal(-0.347083356537970))*(x223)))+(((IkReal(-0.901361465071847))*(x210))));
evalcond[3]=((((IkReal(0.347083356537970))*(new_r01)*(sj2)))+(((IkReal(-0.787635450050147))*(x208)))+(((IkReal(-0.901361465071847))*(x224)))+(((IkReal(0.258999329917800))*(new_r21)))+(((IkReal(-0.347083356537970))*(x216)))+(((IkReal(-0.901361465071847))*(x215))));
evalcond[4]=((((IkReal(0.359345109652202))*(x236)))+(((IkReal(0.221407449401510))*(x238)))+(x210)+(x225)+(((IkReal(-1.00000000000000))*(cj3)*(x240)))+(((IkReal(0.709944243199724))*(x207)))+(((x208)*(x230))));
evalcond[5]=((((IkReal(-0.359345109652202))*(x241)))+(((IkReal(-0.148921042535239))*(x236)))+(((IkReal(-1.00000000000000))*(x207)*(x230)))+(x215)+(x224)+(((IkReal(0.221407449401510))*(x242)))+(((IkReal(0.709944243199724))*(x208))));
evalcond[6]=((((IkReal(-0.0573443810338005))*(x241)))+(x223)+(x239)+(((IkReal(-0.933204742898924))*(x236)))+(((IkReal(-0.574986207811823))*(x238)))+(((IkReal(-1.00000000000000))*(new_r00)*(x212)))+(((x208)*(x232))));
evalcond[7]=((((cj3)*(x237)))+(((IkReal(-1.00000000000000))*(x207)*(x232)))+(x216)+(x244)+(((IkReal(-0.0573443810338005))*(x236)))+(((IkReal(-1.00000000000000))*(new_r01)*(x212)))+(((IkReal(-0.574986207811823))*(x242))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x233)*(x234)))+(((IkReal(-1.00000000000000))*(new_r21)*(x209)))+(((IkReal(-1.00000000000000))*(x224)*(x230)))+(((IkReal(0.933204742898924))*(new_r11)*(x213)))+(((IkReal(-1.00000000000000))*(x215)*(x230)))+(((IkReal(-1.00000000000000))*(x216)*(x232)))+(((new_r01)*(sj3)*(x229)))+(x207)+(((IkReal(-0.359345109652202))*(new_r01)*(x213)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r11)*(x211))));
evalcond[9]=((((IkReal(0.933204742898924))*(new_r10)*(x213)))+(((IkReal(-1.00000000000000))*(new_r20)*(x209)))+(((x226)*(x232)))+(((IkReal(-1.00000000000000))*(x210)*(x230)))+(((IkReal(-0.359345109652202))*(cj3)*(x210)))+(((IkReal(-1.00000000000000))*(x213)*(x214)))+(((IkReal(-1.00000000000000))*(x223)*(x232)))+(((IkReal(-1.00000000000000))*(x221)*(x227)))+(((IkReal(-1.00000000000000))*(x208)))+(((IkReal(-0.933204742898924))*(cj3)*(x226))));
evalcond[10]=((((x210)*(x219)))+(((IkReal(0.0930701426091587))*(cj3)*(x226)))+(((x214)*(x227)))+(((IkReal(-1.00000000000000))*(x213)*(x221)))+(((x226)*(x231)))+(((IkReal(-0.0930701426091587))*(new_r10)*(x213)))+(((IkReal(-1.00000000000000))*(new_r20)*(x217)))+(((IkReal(0.616141540414459))*(x207)))+(((IkReal(-1.00000000000000))*(x223)*(x231)))+(((IkReal(-1.00000000000000))*(x210)*(x228))));
evalcond[11]=((((IkReal(-0.0930701426091587))*(new_r11)*(x213)))+(((IkReal(-0.241699403086935))*(new_r01)*(x213)))+(((x229)*(x233)))+(((IkReal(-1.00000000000000))*(x224)*(x228)))+(((new_r01)*(sj2)*(x231)))+(((new_r11)*(sj3)*(x211)))+(((IkReal(-1.00000000000000))*(x216)*(x231)))+(((x215)*(x219)))+(((IkReal(-1.00000000000000))*(new_r21)*(x217)))+(((IkReal(0.616141540414459))*(x208))));
evalcond[12]=((((x234)*(x236)))+(((IkReal(0.574986207811823))*(sj2)*(x238)))+(((IkReal(0.241699403086935))*(x245)))+(((x220)*(x241)))+(((IkReal(-1.00000000000000))*(x229)*(x242)))+(((x207)*(x218)))+(((IkReal(0.221407449401510))*(x207)*(x227)))+(((IkReal(-1.00000000000000))*(x213)*(x240)))+(new_r00)+(((IkReal(-1.00000000000000))*(sj2)*(x239)))+(((IkReal(0.359345109652202))*(x208)*(x213))));
evalcond[13]=((((IkReal(-1.00000000000000))*(sj2)*(x244)))+(((x229)*(x238)))+(((x208)*(x218)))+(((IkReal(-1.00000000000000))*(x234)*(x241)))+(((IkReal(0.221407449401510))*(x245)))+(((IkReal(-0.359345109652202))*(x207)*(x213)))+(((IkReal(0.574986207811823))*(x246)))+(((IkReal(-0.241699403086935))*(x207)*(x227)))+(new_r01)+(((IkReal(-0.148921042535239))*(x208)*(x213)))+(((x220)*(x236))));
evalcond[14]=((((x211)*(x236)))+(((x207)*(x222)))+(((cj2)*(x239)))+(((IkReal(-0.574986207811823))*(x207)*(x227)))+(((IkReal(-0.0573443810338005))*(x207)*(x213)))+(((sj2)*(x208)*(x230)))+(((IkReal(-1.00000000000000))*(x235)*(x240)))+(((IkReal(0.0930701426091587))*(x245)))+(new_r10)+(((IkReal(0.221407449401510))*(sj2)*(x238)))+(((IkReal(-0.933204742898924))*(x208)*(x213))));
evalcond[15]=((((IkReal(-1.00000000000000))*(sj2)*(x207)*(x230)))+(((x208)*(x222)))+(((IkReal(-0.0573443810338005))*(x208)*(x213)))+(((IkReal(-0.0930701426091587))*(x207)*(x227)))+(((IkReal(0.221407449401510))*(x246)))+(((x213)*(x237)))+(((IkReal(-0.148921042535239))*(x208)*(x235)))+(((IkReal(-1.00000000000000))*(x211)*(x241)))+(new_r11)+(((cj2)*(x244)))+(((IkReal(-0.574986207811823))*(x245))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x247=((cj3)*(new_r12));
IkReal x248=((IkReal(0.283032947164231))*(sj3));
IkReal x249=((IkReal(0.735025137662126))*(sj3));
IkReal x250=((cj3)*(new_r02));
if( IKabs(((gconst1)*(((((IkReal(0.190371018127230))*(x247)))+(((IkReal(-0.213852473949526))*(new_r02)))+(((IkReal(-1.00000000000000))*(new_r12)*(x248)))+(((IkReal(0.555366241559602))*(new_r12)))+(((IkReal(-1.00000000000000))*(new_r02)*(x249)))+(((IkReal(-0.0733053436601961))*(x250))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((new_r12)*(x249)))+(((IkReal(0.0733053436601961))*(x247)))+(((IkReal(0.190371018127230))*(x250)))+(((IkReal(0.555366241559602))*(new_r02)))+(((IkReal(-1.00000000000000))*(new_r02)*(x248)))+(((IkReal(0.213852473949526))*(new_r12))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst1)*(((((IkReal(0.190371018127230))*(x247)))+(((IkReal(-0.213852473949526))*(new_r02)))+(((IkReal(-1.00000000000000))*(new_r12)*(x248)))+(((IkReal(0.555366241559602))*(new_r12)))+(((IkReal(-1.00000000000000))*(new_r02)*(x249)))+(((IkReal(-0.0733053436601961))*(x250)))))), ((gconst1)*(((((new_r12)*(x249)))+(((IkReal(0.0733053436601961))*(x247)))+(((IkReal(0.190371018127230))*(x250)))+(((IkReal(0.555366241559602))*(new_r02)))+(((IkReal(-1.00000000000000))*(new_r02)*(x248)))+(((IkReal(0.213852473949526))*(new_r12)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[7];
IkReal x251=IKcos(j2);
IkReal x252=IKsin(j2);
IkReal x253=((IkReal(0.190371018127230))*(cj3));
IkReal x254=((IkReal(0.933204742898924))*(new_r02));
IkReal x255=((IkReal(0.0733053436601961))*(cj3));
IkReal x256=((IkReal(0.359345109652202))*(sj3));
IkReal x257=((IkReal(0.735025137662126))*(sj3));
IkReal x258=((IkReal(0.241699403086935))*(sj3));
IkReal x259=((IkReal(0.0930701426091587))*(new_r02));
IkReal x260=((IkReal(0.965877501084962))*(new_r22));
IkReal x261=((IkReal(0.283032947164231))*(sj3));
IkReal x262=((IkReal(0.241699403086935))*(cj3));
IkReal x263=((IkReal(0.359345109652202))*(cj3));
IkReal x264=((new_r12)*(x252));
IkReal x265=((cj3)*(x252));
IkReal x266=((new_r02)*(x251));
IkReal x267=((sj3)*(x252));
IkReal x268=((new_r02)*(x252));
IkReal x269=((new_r12)*(x251));
evalcond[0]=((IkReal(-0.555366241559602))+(x264)+(x266)+(x261)+(((IkReal(-1.00000000000000))*(x253))));
evalcond[1]=((IkReal(-0.213852473949526))+(((IkReal(-1.00000000000000))*(x268)))+(x269)+(((IkReal(-1.00000000000000))*(x257)))+(((IkReal(-1.00000000000000))*(x255))));
evalcond[2]=((IkReal(0.616141540414459))+(((IkReal(0.347083356537970))*(x268)))+(((IkReal(-0.347083356537970))*(x269)))+(((IkReal(-0.901361465071847))*(x266)))+(((IkReal(-0.901361465071847))*(x264)))+(((IkReal(0.258999329917800))*(new_r22))));
evalcond[3]=((((IkReal(-0.555366241559602))*(x251)))+(((IkReal(-1.00000000000000))*(x251)*(x253)))+(((IkReal(0.213852473949526))*(x252)))+(((x252)*(x257)))+(((x252)*(x255)))+(new_r02)+(((x251)*(x261))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x252)*(x253)))+(((IkReal(-0.213852473949526))*(x251)))+(((IkReal(-0.555366241559602))*(x252)))+(((IkReal(-1.00000000000000))*(x251)*(x257)))+(((IkReal(-1.00000000000000))*(x251)*(x255)))+(((x252)*(x261)))+(new_r12));
evalcond[5]=((((IkReal(-1.00000000000000))*(x263)*(x264)))+(((IkReal(-1.00000000000000))*(x263)*(x266)))+(((IkReal(-1.00000000000000))*(sj3)*(x260)))+(((x259)*(x267)))+(((IkReal(-1.00000000000000))*(x258)*(x264)))+(((IkReal(-1.00000000000000))*(x258)*(x266)))+(((IkReal(-0.0930701426091587))*(sj3)*(x269)))+(((IkReal(0.933204742898924))*(cj3)*(x269)))+(((IkReal(-1.00000000000000))*(x254)*(x265))));
evalcond[6]=((IkReal(0.787635450050147))+(((IkReal(-1.00000000000000))*(x262)*(x264)))+(((IkReal(-1.00000000000000))*(x262)*(x266)))+(((IkReal(-0.0930701426091587))*(cj3)*(x269)))+(((x259)*(x265)))+(((IkReal(-0.933204742898924))*(sj3)*(x269)))+(((IkReal(-1.00000000000000))*(cj3)*(x260)))+(((x254)*(x267)))+(((x256)*(x264)))+(((x256)*(x266))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign(((IkReal(26009383.3022175))+(((IkReal(151753492.647519))*(cj3)))+(((IkReal(583077609.000000))*((sj3)*(sj3))))+(((IkReal(221353984.667113))*((cj3)*(cj3))))));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(22.4179713230759))*((sj3)*(sj3))))+(((IkReal(8.51054337179311))*((cj3)*(cj3))))+(((IkReal(5.83456712080446))*(cj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.91728356040223))*(cj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((IkReal(-1.00000000000000))+(((IkReal(-2.91728356040223))*(cj3))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x270=((new_r10)*(sj2));
IkReal x271=((new_r00)*(sj3));
IkReal x272=((cj2)*(new_r10));
if( IKabs(((((IkReal(-1.14438915238574))*(x270)))+(((IkReal(-0.440664975803047))*(x272)))+(((IkReal(0.440664975803047))*(new_r00)*(sj2)))+(((IkReal(0.328831478955538))*(new_r20)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r00))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-18687246585829.5))*(sj3)*(x270)))+(((IkReal(-16906337479700.0))*(new_r21)))+(((IkReal(-7195817128642.64))*(sj3)*(x272)))+(((IkReal(7195817128642.64))*(sj2)*(x271)))+(((IkReal(-18687246585829.5))*(cj2)*(x271)))+(((IkReal(5369637522004.29))*(new_r20)*(sj3))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.14438915238574))*(x270)))+(((IkReal(-0.440664975803047))*(x272)))+(((IkReal(0.440664975803047))*(new_r00)*(sj2)))+(((IkReal(0.328831478955538))*(new_r20)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r00)))))+IKsqr(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-18687246585829.5))*(sj3)*(x270)))+(((IkReal(-16906337479700.0))*(new_r21)))+(((IkReal(-7195817128642.64))*(sj3)*(x272)))+(((IkReal(7195817128642.64))*(sj2)*(x271)))+(((IkReal(-18687246585829.5))*(cj2)*(x271)))+(((IkReal(5369637522004.29))*(new_r20)*(sj3)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IkReal(-1.14438915238574))*(x270)))+(((IkReal(-0.440664975803047))*(x272)))+(((IkReal(0.440664975803047))*(new_r00)*(sj2)))+(((IkReal(0.328831478955538))*(new_r20)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r00)))), ((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-18687246585829.5))*(sj3)*(x270)))+(((IkReal(-16906337479700.0))*(new_r21)))+(((IkReal(-7195817128642.64))*(sj3)*(x272)))+(((IkReal(7195817128642.64))*(sj2)*(x271)))+(((IkReal(-18687246585829.5))*(cj2)*(x271)))+(((IkReal(5369637522004.29))*(new_r20)*(sj3)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[16];
IkReal x273=IKsin(j5);
IkReal x274=IKcos(j5);
IkReal x275=((IkReal(0.965877501084962))*(sj3));
IkReal x276=((new_r10)*(sj2));
IkReal x277=((IkReal(0.359345109652202))*(sj2));
IkReal x278=((IkReal(1.00000000000000))*(sj2));
IkReal x279=((cj2)*(cj3));
IkReal x280=((IkReal(0.359345109652202))*(new_r00));
IkReal x281=((cj2)*(new_r01));
IkReal x282=((cj2)*(new_r11));
IkReal x283=((IkReal(0.965877501084962))*(cj3));
IkReal x284=((IkReal(0.709944243199724))*(cj2));
IkReal x285=((IkReal(0.359345109652202))*(sj3));
IkReal x286=((IkReal(0.0573443810338005))*(sj2));
IkReal x287=((IkReal(0.241699403086935))*(new_r00));
IkReal x288=((IkReal(0.709944243199724))*(sj2));
IkReal x289=((cj2)*(new_r10));
IkReal x290=((new_r11)*(sj2));
IkReal x291=((cj2)*(new_r00));
IkReal x292=((new_r00)*(sj2));
IkReal x293=((cj2)*(sj3));
IkReal x294=((IkReal(0.241699403086935))*(cj3));
IkReal x295=((IkReal(0.0930701426091587))*(sj2));
IkReal x296=((IkReal(0.241699403086935))*(sj3));
IkReal x297=((IkReal(0.933204742898924))*(sj3));
IkReal x298=((IkReal(0.0930701426091587))*(sj3));
IkReal x299=((cj3)*(new_r01));
IkReal x300=((IkReal(0.933204742898924))*(sj2));
IkReal x301=((cj3)*(sj2));
IkReal x302=((cj3)*(x274));
IkReal x303=((IkReal(0.933204742898924))*(x273));
IkReal x304=((sj3)*(x273));
IkReal x305=((IkReal(0.273375155731700))*(x273));
IkReal x306=((IkReal(0.148921042535239))*(x273));
IkReal x307=((cj3)*(x273));
IkReal x308=((sj3)*(x274));
IkReal x309=((new_r01)*(sj2)*(sj3));
IkReal x310=((IkReal(0.273375155731700))*(x274));
IkReal x311=((x274)*(x293));
IkReal x312=((sj2)*(x308));
evalcond[0]=((((IkReal(-0.203997053782493))*(x273)))+(((IkReal(-0.595117251370157))*(x307)))+(((x274)*(x275)))+(new_r20));
evalcond[1]=((((IkReal(-0.203997053782493))*(x274)))+(((IkReal(-1.00000000000000))*(x273)*(x275)))+(((IkReal(-0.595117251370157))*(x302)))+(new_r21));
evalcond[2]=((((IkReal(0.347083356537970))*(x292)))+(((IkReal(-0.901361465071847))*(x276)))+(((IkReal(-0.347083356537970))*(x289)))+(((IkReal(-0.901361465071847))*(x291)))+(((IkReal(-0.787635450050147))*(x273)))+(((IkReal(0.258999329917800))*(new_r20))));
evalcond[3]=((((IkReal(0.347083356537970))*(new_r01)*(sj2)))+(((IkReal(-0.347083356537970))*(x282)))+(((IkReal(-0.901361465071847))*(x290)))+(((IkReal(-0.787635450050147))*(x274)))+(((IkReal(0.258999329917800))*(new_r21)))+(((IkReal(-0.901361465071847))*(x281))));
evalcond[4]=((((IkReal(0.359345109652202))*(x302)))+(((IkReal(-1.00000000000000))*(cj3)*(x306)))+(x291)+(x276)+(((IkReal(0.221407449401510))*(x304)))+(((x274)*(x296)))+(((IkReal(0.709944243199724))*(x273))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x273)*(x296)))+(x290)+(x281)+(((IkReal(-0.359345109652202))*(x307)))+(((IkReal(0.221407449401510))*(x308)))+(((IkReal(-0.148921042535239))*(x302)))+(((IkReal(0.709944243199724))*(x274))));
evalcond[6]=((((IkReal(-0.0573443810338005))*(x307)))+(((IkReal(-0.574986207811823))*(x304)))+(((IkReal(-1.00000000000000))*(new_r00)*(x278)))+(x305)+(x289)+(((IkReal(-0.933204742898924))*(x302)))+(((x274)*(x298))));
evalcond[7]=((((IkReal(-0.0573443810338005))*(x302)))+(((IkReal(-1.00000000000000))*(new_r01)*(x278)))+(((IkReal(-0.574986207811823))*(x308)))+(((IkReal(-1.00000000000000))*(x273)*(x298)))+(x310)+(((cj3)*(x303)))+(x282));
evalcond[8]=((((IkReal(-0.359345109652202))*(new_r01)*(x279)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r11)*(x277)))+(((IkReal(-1.00000000000000))*(x290)*(x296)))+(((IkReal(-1.00000000000000))*(new_r21)*(x275)))+(x273)+(((IkReal(-1.00000000000000))*(x299)*(x300)))+(((IkReal(-1.00000000000000))*(x281)*(x296)))+(((IkReal(0.933204742898924))*(new_r11)*(x279)))+(((new_r01)*(sj3)*(x295)))+(((IkReal(-1.00000000000000))*(x282)*(x298))));
evalcond[9]=((((IkReal(-1.00000000000000))*(x289)*(x298)))+(((IkReal(-1.00000000000000))*(x274)))+(((IkReal(-0.359345109652202))*(cj3)*(x276)))+(((IkReal(-0.933204742898924))*(cj3)*(x292)))+(((IkReal(-1.00000000000000))*(new_r20)*(x275)))+(((IkReal(-1.00000000000000))*(x287)*(x293)))+(((IkReal(0.933204742898924))*(new_r10)*(x279)))+(((IkReal(-1.00000000000000))*(x276)*(x296)))+(((IkReal(-1.00000000000000))*(x279)*(x280)))+(((x292)*(x298))));
evalcond[10]=((((IkReal(0.616141540414459))*(x273)))+(((IkReal(-0.0930701426091587))*(new_r10)*(x279)))+(((IkReal(-1.00000000000000))*(x289)*(x297)))+(((x280)*(x293)))+(((IkReal(0.0930701426091587))*(cj3)*(x292)))+(((IkReal(-1.00000000000000))*(new_r20)*(x283)))+(((IkReal(-1.00000000000000))*(x276)*(x294)))+(((IkReal(-1.00000000000000))*(x279)*(x287)))+(((x276)*(x285)))+(((x292)*(x297))));
evalcond[11]=((((IkReal(-0.241699403086935))*(new_r01)*(x279)))+(((IkReal(0.616141540414459))*(x274)))+(((IkReal(-1.00000000000000))*(x290)*(x294)))+(((new_r01)*(sj2)*(x297)))+(((new_r11)*(sj3)*(x277)))+(((IkReal(-0.0930701426091587))*(new_r11)*(x279)))+(((x295)*(x299)))+(((IkReal(-1.00000000000000))*(new_r21)*(x283)))+(((x281)*(x285)))+(((IkReal(-1.00000000000000))*(x282)*(x297))));
evalcond[12]=((((IkReal(-1.00000000000000))*(sj2)*(x305)))+(((x286)*(x307)))+(((IkReal(0.359345109652202))*(x274)*(x279)))+(((IkReal(-1.00000000000000))*(x295)*(x308)))+(((IkReal(-1.00000000000000))*(x279)*(x306)))+(((x273)*(x284)))+(((IkReal(0.241699403086935))*(x311)))+(new_r00)+(((IkReal(0.221407449401510))*(x273)*(x293)))+(((x300)*(x302)))+(((IkReal(0.574986207811823))*(sj2)*(x304))));
evalcond[13]=((((IkReal(-0.359345109652202))*(x273)*(x279)))+(((x286)*(x302)))+(((IkReal(-1.00000000000000))*(sj2)*(x310)))+(((x274)*(x284)))+(((IkReal(-0.148921042535239))*(x274)*(x279)))+(((IkReal(0.221407449401510))*(x311)))+(((IkReal(-0.241699403086935))*(x273)*(x293)))+(((x295)*(x304)))+(((IkReal(0.574986207811823))*(x312)))+(new_r01)+(((IkReal(-1.00000000000000))*(x300)*(x307))));
evalcond[14]=((((IkReal(-1.00000000000000))*(x301)*(x306)))+(((IkReal(-0.574986207811823))*(x273)*(x293)))+(((IkReal(-0.0573443810338005))*(x273)*(x279)))+(((cj2)*(x305)))+(((IkReal(0.0930701426091587))*(x311)))+(((IkReal(0.221407449401510))*(sj2)*(x304)))+(((x273)*(x288)))+(((sj2)*(x274)*(x296)))+(((IkReal(-0.933204742898924))*(x274)*(x279)))+(((x277)*(x302)))+(new_r10));
evalcond[15]=((((IkReal(-0.0573443810338005))*(x274)*(x279)))+(((x279)*(x303)))+(((x274)*(x288)))+(((IkReal(-0.148921042535239))*(x274)*(x301)))+(((IkReal(-1.00000000000000))*(sj2)*(x273)*(x296)))+(((IkReal(-0.0930701426091587))*(x273)*(x293)))+(((IkReal(0.221407449401510))*(x312)))+(((cj2)*(x310)))+(((IkReal(-0.574986207811823))*(x311)))+(new_r11)+(((IkReal(-1.00000000000000))*(x277)*(x307))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x313=((new_r01)*(sj2));
IkReal x314=((cj2)*(sj3));
IkReal x315=((new_r11)*(sj2));
if( IKabs(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-5369637522004.29))*(new_r21)*(sj3)))+(((IkReal(18687246585829.5))*(new_r01)*(x314)))+(((IkReal(18687246585829.5))*(sj3)*(x315)))+(((IkReal(-16906337479700.0))*(new_r20)))+(((IkReal(-7195817128642.64))*(sj3)*(x313)))+(((IkReal(7195817128642.64))*(new_r11)*(x314))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-1.14438915238574))*(x315)))+(((IkReal(0.440664975803047))*(x313)))+(((IkReal(0.328831478955538))*(new_r21)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r01)))+(((IkReal(-0.440664975803047))*(cj2)*(new_r11))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-5369637522004.29))*(new_r21)*(sj3)))+(((IkReal(18687246585829.5))*(new_r01)*(x314)))+(((IkReal(18687246585829.5))*(sj3)*(x315)))+(((IkReal(-16906337479700.0))*(new_r20)))+(((IkReal(-7195817128642.64))*(sj3)*(x313)))+(((IkReal(7195817128642.64))*(new_r11)*(x314)))))))+IKsqr(((((IkReal(-1.14438915238574))*(x315)))+(((IkReal(0.440664975803047))*(x313)))+(((IkReal(0.328831478955538))*(new_r21)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r01)))+(((IkReal(-0.440664975803047))*(cj2)*(new_r11)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j5array[0]=IKatan2(((((IKabs(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3))))) != 0)?((IkReal)1/(((IkReal(-3448843036111.34))+(((IkReal(-10061253091655.3))*(cj3)))))):(IkReal)1.0e30))*(((((IkReal(-5369637522004.29))*(new_r21)*(sj3)))+(((IkReal(18687246585829.5))*(new_r01)*(x314)))+(((IkReal(18687246585829.5))*(sj3)*(x315)))+(((IkReal(-16906337479700.0))*(new_r20)))+(((IkReal(-7195817128642.64))*(sj3)*(x313)))+(((IkReal(7195817128642.64))*(new_r11)*(x314)))))), ((((IkReal(-1.14438915238574))*(x315)))+(((IkReal(0.440664975803047))*(x313)))+(((IkReal(0.328831478955538))*(new_r21)))+(((IkReal(-1.14438915238574))*(cj2)*(new_r01)))+(((IkReal(-0.440664975803047))*(cj2)*(new_r11)))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[16];
IkReal x316=IKsin(j5);
IkReal x317=IKcos(j5);
IkReal x318=((IkReal(0.965877501084962))*(sj3));
IkReal x319=((new_r10)*(sj2));
IkReal x320=((IkReal(0.359345109652202))*(sj2));
IkReal x321=((IkReal(1.00000000000000))*(sj2));
IkReal x322=((cj2)*(cj3));
IkReal x323=((IkReal(0.359345109652202))*(new_r00));
IkReal x324=((cj2)*(new_r01));
IkReal x325=((cj2)*(new_r11));
IkReal x326=((IkReal(0.965877501084962))*(cj3));
IkReal x327=((IkReal(0.709944243199724))*(cj2));
IkReal x328=((IkReal(0.359345109652202))*(sj3));
IkReal x329=((IkReal(0.0573443810338005))*(sj2));
IkReal x330=((IkReal(0.241699403086935))*(new_r00));
IkReal x331=((IkReal(0.709944243199724))*(sj2));
IkReal x332=((cj2)*(new_r10));
IkReal x333=((new_r11)*(sj2));
IkReal x334=((cj2)*(new_r00));
IkReal x335=((new_r00)*(sj2));
IkReal x336=((cj2)*(sj3));
IkReal x337=((IkReal(0.241699403086935))*(cj3));
IkReal x338=((IkReal(0.0930701426091587))*(sj2));
IkReal x339=((IkReal(0.241699403086935))*(sj3));
IkReal x340=((IkReal(0.933204742898924))*(sj3));
IkReal x341=((IkReal(0.0930701426091587))*(sj3));
IkReal x342=((cj3)*(new_r01));
IkReal x343=((IkReal(0.933204742898924))*(sj2));
IkReal x344=((cj3)*(sj2));
IkReal x345=((cj3)*(x317));
IkReal x346=((IkReal(0.933204742898924))*(x316));
IkReal x347=((sj3)*(x316));
IkReal x348=((IkReal(0.273375155731700))*(x316));
IkReal x349=((IkReal(0.148921042535239))*(x316));
IkReal x350=((cj3)*(x316));
IkReal x351=((sj3)*(x317));
IkReal x352=((new_r01)*(sj2)*(sj3));
IkReal x353=((IkReal(0.273375155731700))*(x317));
IkReal x354=((x317)*(x336));
IkReal x355=((sj2)*(x351));
evalcond[0]=((((x317)*(x318)))+(((IkReal(-0.203997053782493))*(x316)))+(new_r20)+(((IkReal(-0.595117251370157))*(x350))));
evalcond[1]=((((IkReal(-0.203997053782493))*(x317)))+(new_r21)+(((IkReal(-0.595117251370157))*(x345)))+(((IkReal(-1.00000000000000))*(x316)*(x318))));
evalcond[2]=((((IkReal(0.347083356537970))*(x335)))+(((IkReal(-0.901361465071847))*(x334)))+(((IkReal(0.258999329917800))*(new_r20)))+(((IkReal(-0.787635450050147))*(x316)))+(((IkReal(-0.347083356537970))*(x332)))+(((IkReal(-0.901361465071847))*(x319))));
evalcond[3]=((((IkReal(0.347083356537970))*(new_r01)*(sj2)))+(((IkReal(-0.901361465071847))*(x324)))+(((IkReal(-0.901361465071847))*(x333)))+(((IkReal(-0.347083356537970))*(x325)))+(((IkReal(0.258999329917800))*(new_r21)))+(((IkReal(-0.787635450050147))*(x317))));
evalcond[4]=((((IkReal(0.709944243199724))*(x316)))+(((IkReal(-1.00000000000000))*(cj3)*(x349)))+(x334)+(x319)+(((x317)*(x339)))+(((IkReal(0.221407449401510))*(x347)))+(((IkReal(0.359345109652202))*(x345))));
evalcond[5]=((((IkReal(0.709944243199724))*(x317)))+(((IkReal(0.221407449401510))*(x351)))+(((IkReal(-1.00000000000000))*(x316)*(x339)))+(x333)+(x324)+(((IkReal(-0.148921042535239))*(x345)))+(((IkReal(-0.359345109652202))*(x350))));
evalcond[6]=((((IkReal(-0.933204742898924))*(x345)))+(((IkReal(-0.0573443810338005))*(x350)))+(((IkReal(-0.574986207811823))*(x347)))+(x332)+(x348)+(((IkReal(-1.00000000000000))*(new_r00)*(x321)))+(((x317)*(x341))));
evalcond[7]=((((IkReal(-0.0573443810338005))*(x345)))+(((IkReal(-0.574986207811823))*(x351)))+(x325)+(x353)+(((IkReal(-1.00000000000000))*(new_r01)*(x321)))+(((IkReal(-1.00000000000000))*(x316)*(x341)))+(((cj3)*(x346))));
evalcond[8]=((((IkReal(-1.00000000000000))*(new_r21)*(x318)))+(((IkReal(0.933204742898924))*(new_r11)*(x322)))+(((IkReal(-1.00000000000000))*(x333)*(x339)))+(((new_r01)*(sj3)*(x338)))+(((IkReal(-0.359345109652202))*(new_r01)*(x322)))+(((IkReal(-1.00000000000000))*(x324)*(x339)))+(x316)+(((IkReal(-1.00000000000000))*(x325)*(x341)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r11)*(x320)))+(((IkReal(-1.00000000000000))*(x342)*(x343))));
evalcond[9]=((((x335)*(x341)))+(((IkReal(-1.00000000000000))*(new_r20)*(x318)))+(((IkReal(0.933204742898924))*(new_r10)*(x322)))+(((IkReal(-1.00000000000000))*(x319)*(x339)))+(((IkReal(-1.00000000000000))*(x332)*(x341)))+(((IkReal(-1.00000000000000))*(x322)*(x323)))+(((IkReal(-0.359345109652202))*(cj3)*(x319)))+(((IkReal(-0.933204742898924))*(cj3)*(x335)))+(((IkReal(-1.00000000000000))*(x330)*(x336)))+(((IkReal(-1.00000000000000))*(x317))));
evalcond[10]=((((x335)*(x340)))+(((IkReal(-1.00000000000000))*(x319)*(x337)))+(((IkReal(0.0930701426091587))*(cj3)*(x335)))+(((IkReal(-1.00000000000000))*(x332)*(x340)))+(((IkReal(0.616141540414459))*(x316)))+(((x323)*(x336)))+(((IkReal(-0.0930701426091587))*(new_r10)*(x322)))+(((IkReal(-1.00000000000000))*(x322)*(x330)))+(((IkReal(-1.00000000000000))*(new_r20)*(x326)))+(((x319)*(x328))));
evalcond[11]=((((new_r01)*(sj2)*(x340)))+(((IkReal(-1.00000000000000))*(x333)*(x337)))+(((new_r11)*(sj3)*(x320)))+(((IkReal(0.616141540414459))*(x317)))+(((IkReal(-1.00000000000000))*(x325)*(x340)))+(((x324)*(x328)))+(((x338)*(x342)))+(((IkReal(-1.00000000000000))*(new_r21)*(x326)))+(((IkReal(-0.0930701426091587))*(new_r11)*(x322)))+(((IkReal(-0.241699403086935))*(new_r01)*(x322))));
evalcond[12]=((((x329)*(x350)))+(((IkReal(-1.00000000000000))*(x338)*(x351)))+(((IkReal(0.241699403086935))*(x354)))+(((IkReal(0.574986207811823))*(sj2)*(x347)))+(((IkReal(0.359345109652202))*(x317)*(x322)))+(((IkReal(0.221407449401510))*(x316)*(x336)))+(((x316)*(x327)))+(((IkReal(-1.00000000000000))*(x322)*(x349)))+(new_r00)+(((x343)*(x345)))+(((IkReal(-1.00000000000000))*(sj2)*(x348))));
evalcond[13]=((((IkReal(-1.00000000000000))*(sj2)*(x353)))+(((IkReal(0.221407449401510))*(x354)))+(((IkReal(-0.359345109652202))*(x316)*(x322)))+(((x329)*(x345)))+(((IkReal(-1.00000000000000))*(x343)*(x350)))+(((x317)*(x327)))+(((x338)*(x347)))+(new_r01)+(((IkReal(-0.148921042535239))*(x317)*(x322)))+(((IkReal(-0.241699403086935))*(x316)*(x336)))+(((IkReal(0.574986207811823))*(x355))));
evalcond[14]=((((IkReal(0.221407449401510))*(sj2)*(x347)))+(((x316)*(x331)))+(((IkReal(-1.00000000000000))*(x344)*(x349)))+(((IkReal(-0.0573443810338005))*(x316)*(x322)))+(((IkReal(0.0930701426091587))*(x354)))+(((IkReal(-0.933204742898924))*(x317)*(x322)))+(((sj2)*(x317)*(x339)))+(new_r10)+(((IkReal(-0.574986207811823))*(x316)*(x336)))+(((cj2)*(x348)))+(((x320)*(x345))));
evalcond[15]=((((IkReal(0.221407449401510))*(x355)))+(((IkReal(-0.574986207811823))*(x354)))+(((IkReal(-1.00000000000000))*(x320)*(x350)))+(((IkReal(-0.0573443810338005))*(x317)*(x322)))+(((x317)*(x331)))+(((IkReal(-1.00000000000000))*(sj2)*(x316)*(x339)))+(((IkReal(-0.0930701426091587))*(x316)*(x336)))+(((x322)*(x346)))+(new_r11)+(((IkReal(-0.148921042535239))*(x317)*(x344)))+(((cj2)*(x353))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x356=((IkReal(603676561.825940))*(sj3));
IkReal x357=((IkReal(371950206.715539))*(cj3));
if( IKabs(((gconst4)*(((((new_r21)*(x356)))+(((new_r20)*(x357)))+(((IkReal(127498818.340530))*(new_r20))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((new_r21)*(x357)))+(((IkReal(127498818.340530))*(new_r21)))+(((IkReal(-1.00000000000000))*(new_r20)*(x356))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst4)*(((((new_r21)*(x356)))+(((new_r20)*(x357)))+(((IkReal(127498818.340530))*(new_r20)))))), ((gconst4)*(((((new_r21)*(x357)))+(((IkReal(127498818.340530))*(new_r21)))+(((IkReal(-1.00000000000000))*(new_r20)*(x356)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[16];
IkReal x358=IKsin(j5);
IkReal x359=IKcos(j5);
IkReal x360=((IkReal(0.965877501084962))*(sj3));
IkReal x361=((new_r10)*(sj2));
IkReal x362=((IkReal(0.359345109652202))*(sj2));
IkReal x363=((IkReal(1.00000000000000))*(sj2));
IkReal x364=((cj2)*(cj3));
IkReal x365=((IkReal(0.359345109652202))*(new_r00));
IkReal x366=((cj2)*(new_r01));
IkReal x367=((cj2)*(new_r11));
IkReal x368=((IkReal(0.965877501084962))*(cj3));
IkReal x369=((IkReal(0.709944243199724))*(cj2));
IkReal x370=((IkReal(0.359345109652202))*(sj3));
IkReal x371=((IkReal(0.0573443810338005))*(sj2));
IkReal x372=((IkReal(0.241699403086935))*(new_r00));
IkReal x373=((IkReal(0.709944243199724))*(sj2));
IkReal x374=((cj2)*(new_r10));
IkReal x375=((new_r11)*(sj2));
IkReal x376=((cj2)*(new_r00));
IkReal x377=((new_r00)*(sj2));
IkReal x378=((cj2)*(sj3));
IkReal x379=((IkReal(0.241699403086935))*(cj3));
IkReal x380=((IkReal(0.0930701426091587))*(sj2));
IkReal x381=((IkReal(0.241699403086935))*(sj3));
IkReal x382=((IkReal(0.933204742898924))*(sj3));
IkReal x383=((IkReal(0.0930701426091587))*(sj3));
IkReal x384=((cj3)*(new_r01));
IkReal x385=((IkReal(0.933204742898924))*(sj2));
IkReal x386=((cj3)*(sj2));
IkReal x387=((cj3)*(x359));
IkReal x388=((IkReal(0.933204742898924))*(x358));
IkReal x389=((sj3)*(x358));
IkReal x390=((IkReal(0.273375155731700))*(x358));
IkReal x391=((IkReal(0.148921042535239))*(x358));
IkReal x392=((cj3)*(x358));
IkReal x393=((sj3)*(x359));
IkReal x394=((new_r01)*(sj2)*(sj3));
IkReal x395=((IkReal(0.273375155731700))*(x359));
IkReal x396=((x359)*(x378));
IkReal x397=((sj2)*(x393));
evalcond[0]=((((x359)*(x360)))+(((IkReal(-0.203997053782493))*(x358)))+(((IkReal(-0.595117251370157))*(x392)))+(new_r20));
evalcond[1]=((((IkReal(-0.595117251370157))*(x387)))+(((IkReal(-1.00000000000000))*(x358)*(x360)))+(((IkReal(-0.203997053782493))*(x359)))+(new_r21));
evalcond[2]=((((IkReal(-0.901361465071847))*(x361)))+(((IkReal(-0.901361465071847))*(x376)))+(((IkReal(-0.787635450050147))*(x358)))+(((IkReal(0.258999329917800))*(new_r20)))+(((IkReal(-0.347083356537970))*(x374)))+(((IkReal(0.347083356537970))*(x377))));
evalcond[3]=((((IkReal(-0.901361465071847))*(x366)))+(((IkReal(-0.901361465071847))*(x375)))+(((IkReal(0.347083356537970))*(new_r01)*(sj2)))+(((IkReal(-0.787635450050147))*(x359)))+(((IkReal(0.258999329917800))*(new_r21)))+(((IkReal(-0.347083356537970))*(x367))));
evalcond[4]=((((x359)*(x381)))+(x376)+(x361)+(((IkReal(0.359345109652202))*(x387)))+(((IkReal(-1.00000000000000))*(cj3)*(x391)))+(((IkReal(0.709944243199724))*(x358)))+(((IkReal(0.221407449401510))*(x389))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x358)*(x381)))+(((IkReal(-0.359345109652202))*(x392)))+(((IkReal(0.221407449401510))*(x393)))+(((IkReal(-0.148921042535239))*(x387)))+(x375)+(x366)+(((IkReal(0.709944243199724))*(x359))));
evalcond[6]=((((IkReal(-1.00000000000000))*(new_r00)*(x363)))+(((x359)*(x383)))+(((IkReal(-0.574986207811823))*(x389)))+(x374)+(x390)+(((IkReal(-0.933204742898924))*(x387)))+(((IkReal(-0.0573443810338005))*(x392))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x358)*(x383)))+(((cj3)*(x388)))+(((IkReal(-0.0573443810338005))*(x387)))+(x367)+(x395)+(((IkReal(-0.574986207811823))*(x393)))+(((IkReal(-1.00000000000000))*(new_r01)*(x363))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x367)*(x383)))+(((IkReal(-1.00000000000000))*(x375)*(x381)))+(((IkReal(-1.00000000000000))*(x384)*(x385)))+(((IkReal(0.933204742898924))*(new_r11)*(x364)))+(x358)+(((new_r01)*(sj3)*(x380)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r11)*(x362)))+(((IkReal(-0.359345109652202))*(new_r01)*(x364)))+(((IkReal(-1.00000000000000))*(x366)*(x381)))+(((IkReal(-1.00000000000000))*(new_r21)*(x360))));
evalcond[9]=((((x377)*(x383)))+(((IkReal(-1.00000000000000))*(new_r20)*(x360)))+(((IkReal(-0.359345109652202))*(cj3)*(x361)))+(((IkReal(-1.00000000000000))*(x372)*(x378)))+(((IkReal(-1.00000000000000))*(x374)*(x383)))+(((IkReal(0.933204742898924))*(new_r10)*(x364)))+(((IkReal(-1.00000000000000))*(x359)))+(((IkReal(-1.00000000000000))*(x361)*(x381)))+(((IkReal(-1.00000000000000))*(x364)*(x365)))+(((IkReal(-0.933204742898924))*(cj3)*(x377))));
evalcond[10]=((((x377)*(x382)))+(((IkReal(-0.0930701426091587))*(new_r10)*(x364)))+(((IkReal(-1.00000000000000))*(new_r20)*(x368)))+(((IkReal(0.616141540414459))*(x358)))+(((IkReal(-1.00000000000000))*(x361)*(x379)))+(((IkReal(0.0930701426091587))*(cj3)*(x377)))+(((IkReal(-1.00000000000000))*(x374)*(x382)))+(((x365)*(x378)))+(((IkReal(-1.00000000000000))*(x364)*(x372)))+(((x361)*(x370))));
evalcond[11]=((((IkReal(-0.0930701426091587))*(new_r11)*(x364)))+(((IkReal(-1.00000000000000))*(x367)*(x382)))+(((IkReal(0.616141540414459))*(x359)))+(((IkReal(-0.241699403086935))*(new_r01)*(x364)))+(((new_r01)*(sj2)*(x382)))+(((x366)*(x370)))+(((IkReal(-1.00000000000000))*(x375)*(x379)))+(((x380)*(x384)))+(((IkReal(-1.00000000000000))*(new_r21)*(x368)))+(((new_r11)*(sj3)*(x362))));
evalcond[12]=((((IkReal(0.241699403086935))*(x396)))+(((x358)*(x369)))+(((x371)*(x392)))+(((IkReal(0.574986207811823))*(sj2)*(x389)))+(((IkReal(-1.00000000000000))*(sj2)*(x390)))+(((IkReal(0.359345109652202))*(x359)*(x364)))+(((IkReal(0.221407449401510))*(x358)*(x378)))+(((IkReal(-1.00000000000000))*(x380)*(x393)))+(((x385)*(x387)))+(new_r00)+(((IkReal(-1.00000000000000))*(x364)*(x391))));
evalcond[13]=((((IkReal(-0.148921042535239))*(x359)*(x364)))+(((IkReal(0.574986207811823))*(x397)))+(((IkReal(-0.241699403086935))*(x358)*(x378)))+(((IkReal(-1.00000000000000))*(sj2)*(x395)))+(((IkReal(-1.00000000000000))*(x385)*(x392)))+(((IkReal(0.221407449401510))*(x396)))+(((x359)*(x369)))+(((IkReal(-0.359345109652202))*(x358)*(x364)))+(((x371)*(x387)))+(new_r01)+(((x380)*(x389))));
evalcond[14]=((((IkReal(-0.0573443810338005))*(x358)*(x364)))+(((x358)*(x373)))+(((IkReal(-0.574986207811823))*(x358)*(x378)))+(((IkReal(-1.00000000000000))*(x386)*(x391)))+(((x362)*(x387)))+(((sj2)*(x359)*(x381)))+(((IkReal(0.0930701426091587))*(x396)))+(((cj2)*(x390)))+(new_r10)+(((IkReal(-0.933204742898924))*(x359)*(x364)))+(((IkReal(0.221407449401510))*(sj2)*(x389))));
evalcond[15]=((((IkReal(-1.00000000000000))*(x362)*(x392)))+(((IkReal(0.221407449401510))*(x397)))+(((IkReal(-0.0573443810338005))*(x359)*(x364)))+(((IkReal(-0.148921042535239))*(x359)*(x386)))+(((x359)*(x373)))+(((cj2)*(x395)))+(((IkReal(-1.00000000000000))*(sj2)*(x358)*(x381)))+(new_r11)+(((IkReal(-0.574986207811823))*(x396)))+(((IkReal(-0.0930701426091587))*(x358)*(x378)))+(((x364)*(x388))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j5array[1], cj5array[1], sj5array[1];
bool j5valid[1]={false};
_nj5 = 1;
IkReal x398=((IkReal(603676561.825940))*(sj3));
IkReal x399=((IkReal(371950206.715539))*(cj3));
if( IKabs(((gconst3)*(((((new_r20)*(x399)))+(((new_r21)*(x398)))+(((IkReal(127498818.340530))*(new_r20))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((new_r21)*(x399)))+(((IkReal(127498818.340530))*(new_r21)))+(((IkReal(-1.00000000000000))*(new_r20)*(x398))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j5array[0]=IKatan2(((gconst3)*(((((new_r20)*(x399)))+(((new_r21)*(x398)))+(((IkReal(127498818.340530))*(new_r20)))))), ((gconst3)*(((((new_r21)*(x399)))+(((IkReal(127498818.340530))*(new_r21)))+(((IkReal(-1.00000000000000))*(new_r20)*(x398)))))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
for(int ij5 = 0; ij5 < 1; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 1; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];
{
IkReal evalcond[2];
IkReal x400=IKsin(j5);
IkReal x401=IKcos(j5);
IkReal x402=((IkReal(0.965877501084962))*(sj3));
IkReal x403=((IkReal(0.595117251370157))*(cj3));
evalcond[0]=((((IkReal(-1.00000000000000))*(x400)*(x403)))+(((IkReal(-0.203997053782493))*(x400)))+(new_r20)+(((x401)*(x402))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x401)*(x403)))+(((IkReal(-1.00000000000000))*(x400)*(x402)))+(((IkReal(-0.203997053782493))*(x401)))+(new_r21));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign((((new_r12)*(new_r12))+((new_r02)*(new_r02))));
dummyeval[0]=(((new_r12)*(new_r12))+((new_r02)*(new_r02)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((((new_r00)*(new_r12)))+(((IkReal(-1.00000000000000))*(new_r02)*(new_r10)))));
dummyeval[0]=((((new_r00)*(new_r12)))+(((IkReal(-1.00000000000000))*(new_r02)*(new_r10))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[12];
IkReal x404=((IkReal(0.595117251370157))*(cj3));
IkReal x405=((IkReal(0.965877501084962))*(sj3));
IkReal x406=((IkReal(0.159580246101866))+(new_r22)+(((IkReal(-0.760759360260365))*(cj3))));
IkReal x407=((((IkReal(-1.00000000000000))*(sj5)*(x404)))+(((IkReal(-0.203997053782493))*(sj5)))+(((cj5)*(x405)))+(new_r20));
IkReal x408=((((IkReal(-1.00000000000000))*(sj5)*(x405)))+(((IkReal(-0.203997053782493))*(cj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x404)))+(new_r21));
evalcond[0]=(((new_r12)*(new_r12))+((new_r02)*(new_r02)));
evalcond[1]=x406;
evalcond[2]=x406;
evalcond[3]=x407;
evalcond[4]=x408;
evalcond[5]=((IkReal(-0.555366241559602))+(((IkReal(0.283032947164231))*(sj3)))+(((IkReal(-0.190371018127230))*(cj3))));
evalcond[6]=x407;
evalcond[7]=x408;
evalcond[8]=((IkReal(-0.213852473949526))+(((IkReal(-0.735025137662126))*(sj3)))+(((IkReal(-0.0733053436601961))*(cj3))));
evalcond[9]=((IkReal(0.616141540414459))+(((IkReal(0.258999329917800))*(new_r22))));
evalcond[10]=((IkReal(-0.965877501084962))*(new_r22)*(sj3));
evalcond[11]=((IkReal(0.787635450050147))+(((IkReal(-0.965877501084962))*(cj3)*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  && IKabs(evalcond[9]) < 0.0000010000000000  && IKabs(evalcond[10]) < 0.0000010000000000  && IKabs(evalcond[11]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((IkReal(0.0733053436601961))*(cj3)*(new_r00)))+(((IkReal(0.735025137662126))*(new_r00)*(sj3)))+(((IkReal(-0.283032947164231))*(new_r10)*(sj3)))+(((IkReal(0.555366241559602))*(new_r10)))+(((IkReal(0.190371018127230))*(cj3)*(new_r10)))+(((IkReal(0.213852473949526))*(new_r00)))));
dummyeval[0]=((((IkReal(10.0268970986522))*(new_r00)*(sj3)))+(((IkReal(7.57606763476861))*(new_r10)))+(((IkReal(2.59695962970567))*(cj3)*(new_r10)))+(((IkReal(-3.86101385018013))*(new_r10)*(sj3)))+(((cj3)*(new_r00)))+(((IkReal(2.91728356040223))*(new_r00))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst8;
gconst8=IKsign(((((IkReal(0.735025137662126))*(new_r01)*(sj3)))+(((IkReal(0.0733053436601961))*(cj3)*(new_r01)))+(((IkReal(-0.283032947164231))*(new_r11)*(sj3)))+(((IkReal(0.555366241559602))*(new_r11)))+(((IkReal(0.190371018127230))*(cj3)*(new_r11)))+(((IkReal(0.213852473949526))*(new_r01)))));
dummyeval[0]=((((IkReal(-3.86101385018013))*(new_r11)*(sj3)))+(((IkReal(7.57606763476861))*(new_r11)))+(((IkReal(2.59695962970567))*(cj3)*(new_r11)))+(((IkReal(10.0268970986522))*(new_r01)*(sj3)))+(((cj3)*(new_r01)))+(((IkReal(2.91728356040223))*(new_r01))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x409=(cj3)*(cj3);
IkReal x410=(sj3)*(sj3);
IkReal x411=((cj3)*(cj5));
IkReal x412=((sj3)*(sj5));
IkReal x413=((cj3)*(sj5));
IkReal x414=((cj5)*(sj3));
IkReal x415=((cj5)*(x409));
IkReal x416=((sj5)*(x410));
IkReal x417=((cj5)*(x410));
IkReal x418=((sj5)*(x409));
if( IKabs(((gconst8)*(((((IkReal(-0.0556939439875130))*(cj3)*(x412)))+(((IkReal(0.134231689079590))*(x412)))+(((IkReal(-0.0842991231270371))*(sj3)*(x411)))+(((IkReal(-0.0684088943835306))*(x416)))+(((IkReal(0.199568142970366))*(x413)))+(((IkReal(0.0626656029282248))*(x417)))+(((IkReal(-0.0524470887095636))*(x411)))+(((IkReal(0.0684088943835306))*(x418)))+(((IkReal(0.0283502504880020))*(x415)))+(((IkReal(-0.394279066062707))*(cj5)))+(((IkReal(0.0779753884476831))*(x414))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst8)*(((((IkReal(-0.162740040975765))*(x417)))+(((IkReal(0.0263419167556655))*(x418)))+(((IkReal(-0.569175395895678))*(x414)))+(((IkReal(-0.151823332774485))*(cj5)))+(((IkReal(0.281845546496073))*(cj3)*(x412)))+(((IkReal(0.0932303606229463))*(sj3)*(x411)))+(((IkReal(0.0768468407007869))*(x413)))+(((IkReal(0.177655137026828))*(x416)))+(((IkReal(0.0109167082012804))*(x415)))+(((IkReal(0.0516880153022646))*(x412)))+(((IkReal(-0.0201955733580301))*(x411))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst8)*(((((IkReal(-0.0556939439875130))*(cj3)*(x412)))+(((IkReal(0.134231689079590))*(x412)))+(((IkReal(-0.0842991231270371))*(sj3)*(x411)))+(((IkReal(-0.0684088943835306))*(x416)))+(((IkReal(0.199568142970366))*(x413)))+(((IkReal(0.0626656029282248))*(x417)))+(((IkReal(-0.0524470887095636))*(x411)))+(((IkReal(0.0684088943835306))*(x418)))+(((IkReal(0.0283502504880020))*(x415)))+(((IkReal(-0.394279066062707))*(cj5)))+(((IkReal(0.0779753884476831))*(x414)))))), ((gconst8)*(((((IkReal(-0.162740040975765))*(x417)))+(((IkReal(0.0263419167556655))*(x418)))+(((IkReal(-0.569175395895678))*(x414)))+(((IkReal(-0.151823332774485))*(cj5)))+(((IkReal(0.281845546496073))*(cj3)*(x412)))+(((IkReal(0.0932303606229463))*(sj3)*(x411)))+(((IkReal(0.0768468407007869))*(x413)))+(((IkReal(0.177655137026828))*(x416)))+(((IkReal(0.0109167082012804))*(x415)))+(((IkReal(0.0516880153022646))*(x412)))+(((IkReal(-0.0201955733580301))*(x411)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[16];
IkReal x419=IKcos(j2);
IkReal x420=IKsin(j2);
IkReal x421=((IkReal(0.148921042535239))*(cj5));
IkReal x422=((IkReal(0.933204742898924))*(new_r10));
IkReal x423=((IkReal(0.273375155731700))*(sj5));
IkReal x424=((new_r11)*(sj3));
IkReal x425=((IkReal(0.359345109652202))*(sj5));
IkReal x426=((cj3)*(sj5));
IkReal x427=((cj3)*(new_r00));
IkReal x428=((IkReal(0.273375155731700))*(cj5));
IkReal x429=((cj3)*(new_r10));
IkReal x430=((cj5)*(sj3));
IkReal x431=((sj3)*(sj5));
IkReal x432=((IkReal(0.933204742898924))*(cj3));
IkReal x433=((IkReal(0.965877501084962))*(new_r21));
IkReal x434=((IkReal(0.359345109652202))*(cj5));
IkReal x435=((IkReal(0.359345109652202))*(new_r00));
IkReal x436=((new_r00)*(sj3));
IkReal x437=((IkReal(0.241699403086935))*(new_r00));
IkReal x438=((IkReal(0.0573443810338005))*(cj3));
IkReal x439=((IkReal(0.965877501084962))*(new_r20));
IkReal x440=((IkReal(0.359345109652202))*(new_r01));
IkReal x441=((IkReal(0.241699403086935))*(new_r01));
IkReal x442=((IkReal(0.0930701426091587))*(new_r10));
IkReal x443=((cj3)*(x419));
IkReal x444=((IkReal(0.933204742898924))*(x426));
IkReal x445=((IkReal(0.241699403086935))*(x420));
IkReal x446=((sj3)*(x419));
IkReal x447=((IkReal(0.0930701426091587))*(x420));
IkReal x448=((new_r01)*(x420));
IkReal x449=((IkReal(0.709944243199724))*(x420));
IkReal x450=((new_r10)*(x420));
IkReal x451=((sj3)*(x420));
IkReal x452=((cj5)*(x420));
IkReal x453=((IkReal(0.574986207811823))*(x420));
IkReal x454=((new_r00)*(x420));
IkReal x455=((cj3)*(x420));
IkReal x456=((IkReal(0.221407449401510))*(x420));
IkReal x457=((new_r01)*(x419));
IkReal x458=((IkReal(0.359345109652202))*(x420));
IkReal x459=((IkReal(0.709944243199724))*(x419));
IkReal x460=((new_r11)*(x420));
IkReal x461=((new_r11)*(x419));
IkReal x462=((new_r10)*(x419));
IkReal x463=((IkReal(0.933204742898924))*(x420));
IkReal x464=((new_r00)*(x419));
evalcond[0]=((((IkReal(-0.901361465071847))*(x450)))+(((IkReal(-0.787635450050147))*(sj5)))+(((IkReal(0.258999329917800))*(new_r20)))+(((IkReal(0.347083356537970))*(x454)))+(((IkReal(-0.347083356537970))*(x462)))+(((IkReal(-0.901361465071847))*(x464))));
evalcond[1]=((((IkReal(-0.901361465071847))*(x457)))+(((IkReal(0.347083356537970))*(x448)))+(((IkReal(0.258999329917800))*(new_r21)))+(((IkReal(-0.787635450050147))*(cj5)))+(((IkReal(-0.347083356537970))*(x461)))+(((IkReal(-0.901361465071847))*(x460))));
evalcond[2]=((((IkReal(-0.555366241559602))*(x419)))+(((IkReal(0.213852473949526))*(x420)))+(((IkReal(0.0733053436601961))*(x455)))+(((IkReal(0.735025137662126))*(x451)))+(((IkReal(0.283032947164231))*(x446)))+(((IkReal(-0.190371018127230))*(x443))));
evalcond[3]=((((IkReal(0.283032947164231))*(x451)))+(((IkReal(-0.555366241559602))*(x420)))+(((IkReal(-0.190371018127230))*(x455)))+(((IkReal(-0.735025137662126))*(x446)))+(((IkReal(-0.0733053436601961))*(x443)))+(((IkReal(-0.213852473949526))*(x419))));
evalcond[4]=((((IkReal(0.221407449401510))*(x431)))+(((cj3)*(x434)))+(x450)+(x464)+(((IkReal(-0.148921042535239))*(x426)))+(((IkReal(0.709944243199724))*(sj5)))+(((IkReal(0.241699403086935))*(x430))));
evalcond[5]=((((IkReal(-0.241699403086935))*(x431)))+(((IkReal(0.221407449401510))*(x430)))+(((IkReal(-1.00000000000000))*(cj3)*(x425)))+(((IkReal(-1.00000000000000))*(cj3)*(x421)))+(x457)+(x460)+(((IkReal(0.709944243199724))*(cj5))));
evalcond[6]=((((IkReal(-0.0573443810338005))*(x426)))+(((IkReal(-1.00000000000000))*(x454)))+(((IkReal(-0.574986207811823))*(x431)))+(((IkReal(-1.00000000000000))*(cj5)*(x432)))+(((IkReal(0.0930701426091587))*(x430)))+(x423)+(x462));
evalcond[7]=((((IkReal(-1.00000000000000))*(x448)))+(((IkReal(-0.574986207811823))*(x430)))+(((IkReal(-1.00000000000000))*(cj5)*(x438)))+(x428)+(x444)+(x461)+(((IkReal(-0.0930701426091587))*(x431))));
evalcond[8]=((((IkReal(-1.00000000000000))*(sj3)*(x433)))+(sj5)+(((x432)*(x461)))+(((new_r01)*(sj3)*(x447)))+(((IkReal(-1.00000000000000))*(x432)*(x448)))+(((IkReal(-1.00000000000000))*(x424)*(x445)))+(((IkReal(-0.0930701426091587))*(x419)*(x424)))+(((IkReal(-1.00000000000000))*(x440)*(x443)))+(((IkReal(-0.359345109652202))*(new_r11)*(x455)))+(((IkReal(-1.00000000000000))*(x441)*(x446))));
evalcond[9]=((((IkReal(-1.00000000000000))*(sj3)*(x439)))+(((x422)*(x443)))+(((IkReal(-0.241699403086935))*(x419)*(x436)))+(((IkReal(-0.359345109652202))*(x419)*(x427)))+(((IkReal(-1.00000000000000))*(new_r10)*(sj3)*(x445)))+(((IkReal(-1.00000000000000))*(x429)*(x458)))+(((IkReal(-1.00000000000000))*(x427)*(x463)))+(((IkReal(-1.00000000000000))*(cj5)))+(((x436)*(x447)))+(((IkReal(-1.00000000000000))*(x442)*(x446))));
evalcond[10]=((((IkReal(-1.00000000000000))*(cj3)*(x439)))+(((x435)*(x446)))+(((IkReal(0.359345109652202))*(sj3)*(x450)))+(((IkReal(-1.00000000000000))*(x429)*(x445)))+(((IkReal(-0.241699403086935))*(x419)*(x427)))+(((IkReal(-0.0930701426091587))*(x419)*(x429)))+(((IkReal(-1.00000000000000))*(x422)*(x446)))+(((IkReal(0.616141540414459))*(sj5)))+(((x436)*(x463)))+(((x427)*(x447))));
evalcond[11]=((((IkReal(-1.00000000000000))*(cj3)*(x433)))+(((IkReal(0.933204742898924))*(sj3)*(x448)))+(((IkReal(-0.933204742898924))*(x419)*(x424)))+(((IkReal(-0.0930701426091587))*(new_r11)*(x443)))+(((cj3)*(new_r01)*(x447)))+(((x424)*(x458)))+(((x440)*(x446)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r11)*(x445)))+(((IkReal(0.616141540414459))*(cj5)))+(((IkReal(-1.00000000000000))*(x441)*(x443))));
evalcond[12]=((((IkReal(0.241699403086935))*(x419)*(x430)))+(((IkReal(-1.00000000000000))*(x430)*(x447)))+(((x432)*(x452)))+(((x434)*(x443)))+(((IkReal(-0.148921042535239))*(x419)*(x426)))+(((IkReal(-1.00000000000000))*(x420)*(x423)))+(((IkReal(0.0573443810338005))*(x420)*(x426)))+(((IkReal(0.221407449401510))*(x419)*(x431)))+(((x431)*(x453)))+(new_r00)+(((sj5)*(x459))));
evalcond[13]=((((cj5)*(x459)))+(((IkReal(-1.00000000000000))*(x420)*(x428)))+(((IkReal(-1.00000000000000))*(x420)*(x444)))+(((IkReal(-1.00000000000000))*(x421)*(x443)))+(((x438)*(x452)))+(((x430)*(x453)))+(((IkReal(0.221407449401510))*(x419)*(x430)))+(((IkReal(-0.241699403086935))*(x419)*(x431)))+(((x431)*(x447)))+(((IkReal(-1.00000000000000))*(x425)*(x443)))+(new_r01));
evalcond[14]=((((IkReal(-0.0573443810338005))*(x419)*(x426)))+(((IkReal(0.0930701426091587))*(x419)*(x430)))+(((x419)*(x423)))+(((x431)*(x456)))+(((x430)*(x445)))+(((sj5)*(x449)))+(((x434)*(x455)))+(new_r10)+(((IkReal(-0.148921042535239))*(x420)*(x426)))+(((IkReal(-1.00000000000000))*(cj5)*(x419)*(x432)))+(((IkReal(-0.574986207811823))*(x419)*(x431))));
evalcond[15]=((((IkReal(-1.00000000000000))*(x431)*(x445)))+(((cj5)*(x449)))+(((x419)*(x428)))+(((x430)*(x456)))+(((x419)*(x444)))+(((IkReal(-1.00000000000000))*(x421)*(x455)))+(new_r11)+(((IkReal(-0.0930701426091587))*(x419)*(x431)))+(((IkReal(-1.00000000000000))*(cj5)*(x419)*(x438)))+(((IkReal(-1.00000000000000))*(x425)*(x455)))+(((IkReal(-0.574986207811823))*(x419)*(x430))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x465=(sj3)*(sj3);
IkReal x466=(cj3)*(cj3);
IkReal x467=((cj5)*(sj3));
IkReal x468=((cj3)*(sj5));
IkReal x469=((sj3)*(sj5));
IkReal x470=((IkReal(0.0684088943835306))*(cj5));
IkReal x471=((cj3)*(cj5));
IkReal x472=((sj5)*(x466));
IkReal x473=((sj5)*(x465));
if( IKabs(((gconst7)*(((((IkReal(0.0626656029282248))*(x473)))+(((IkReal(-0.0524470887095636))*(x468)))+(((x465)*(x470)))+(((IkReal(0.0283502504880020))*(x472)))+(((IkReal(0.0779753884476831))*(x469)))+(((IkReal(-0.394279066062707))*(sj5)))+(((IkReal(-0.134231689079590))*(x467)))+(((IkReal(-0.199568142970366))*(x471)))+(((IkReal(-0.0842991231270371))*(sj3)*(x468)))+(((IkReal(-1.00000000000000))*(x466)*(x470)))+(((IkReal(0.0556939439875130))*(cj3)*(x467))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(-0.281845546496073))*(cj3)*(x467)))+(((IkReal(-0.0768468407007869))*(x471)))+(((IkReal(-0.0201955733580301))*(x468)))+(((IkReal(-0.162740040975765))*(x473)))+(((IkReal(0.0109167082012804))*(x472)))+(((IkReal(-0.177655137026828))*(cj5)*(x465)))+(((IkReal(-0.569175395895678))*(x469)))+(((IkReal(-0.0263419167556655))*(cj5)*(x466)))+(((IkReal(-0.0516880153022646))*(x467)))+(((IkReal(0.0932303606229463))*(sj3)*(x468)))+(((IkReal(-0.151823332774485))*(sj5))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst7)*(((((IkReal(0.0626656029282248))*(x473)))+(((IkReal(-0.0524470887095636))*(x468)))+(((x465)*(x470)))+(((IkReal(0.0283502504880020))*(x472)))+(((IkReal(0.0779753884476831))*(x469)))+(((IkReal(-0.394279066062707))*(sj5)))+(((IkReal(-0.134231689079590))*(x467)))+(((IkReal(-0.199568142970366))*(x471)))+(((IkReal(-0.0842991231270371))*(sj3)*(x468)))+(((IkReal(-1.00000000000000))*(x466)*(x470)))+(((IkReal(0.0556939439875130))*(cj3)*(x467)))))), ((gconst7)*(((((IkReal(-0.281845546496073))*(cj3)*(x467)))+(((IkReal(-0.0768468407007869))*(x471)))+(((IkReal(-0.0201955733580301))*(x468)))+(((IkReal(-0.162740040975765))*(x473)))+(((IkReal(0.0109167082012804))*(x472)))+(((IkReal(-0.177655137026828))*(cj5)*(x465)))+(((IkReal(-0.569175395895678))*(x469)))+(((IkReal(-0.0263419167556655))*(cj5)*(x466)))+(((IkReal(-0.0516880153022646))*(x467)))+(((IkReal(0.0932303606229463))*(sj3)*(x468)))+(((IkReal(-0.151823332774485))*(sj5)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[16];
IkReal x474=IKcos(j2);
IkReal x475=IKsin(j2);
IkReal x476=((IkReal(0.148921042535239))*(cj5));
IkReal x477=((IkReal(0.933204742898924))*(new_r10));
IkReal x478=((IkReal(0.273375155731700))*(sj5));
IkReal x479=((new_r11)*(sj3));
IkReal x480=((IkReal(0.359345109652202))*(sj5));
IkReal x481=((cj3)*(sj5));
IkReal x482=((cj3)*(new_r00));
IkReal x483=((IkReal(0.273375155731700))*(cj5));
IkReal x484=((cj3)*(new_r10));
IkReal x485=((cj5)*(sj3));
IkReal x486=((sj3)*(sj5));
IkReal x487=((IkReal(0.933204742898924))*(cj3));
IkReal x488=((IkReal(0.965877501084962))*(new_r21));
IkReal x489=((IkReal(0.359345109652202))*(cj5));
IkReal x490=((IkReal(0.359345109652202))*(new_r00));
IkReal x491=((new_r00)*(sj3));
IkReal x492=((IkReal(0.241699403086935))*(new_r00));
IkReal x493=((IkReal(0.0573443810338005))*(cj3));
IkReal x494=((IkReal(0.965877501084962))*(new_r20));
IkReal x495=((IkReal(0.359345109652202))*(new_r01));
IkReal x496=((IkReal(0.241699403086935))*(new_r01));
IkReal x497=((IkReal(0.0930701426091587))*(new_r10));
IkReal x498=((cj3)*(x474));
IkReal x499=((IkReal(0.933204742898924))*(x481));
IkReal x500=((IkReal(0.241699403086935))*(x475));
IkReal x501=((sj3)*(x474));
IkReal x502=((IkReal(0.0930701426091587))*(x475));
IkReal x503=((new_r01)*(x475));
IkReal x504=((IkReal(0.709944243199724))*(x475));
IkReal x505=((new_r10)*(x475));
IkReal x506=((sj3)*(x475));
IkReal x507=((cj5)*(x475));
IkReal x508=((IkReal(0.574986207811823))*(x475));
IkReal x509=((new_r00)*(x475));
IkReal x510=((cj3)*(x475));
IkReal x511=((IkReal(0.221407449401510))*(x475));
IkReal x512=((new_r01)*(x474));
IkReal x513=((IkReal(0.359345109652202))*(x475));
IkReal x514=((IkReal(0.709944243199724))*(x474));
IkReal x515=((new_r11)*(x475));
IkReal x516=((new_r11)*(x474));
IkReal x517=((new_r10)*(x474));
IkReal x518=((IkReal(0.933204742898924))*(x475));
IkReal x519=((new_r00)*(x474));
evalcond[0]=((((IkReal(-0.787635450050147))*(sj5)))+(((IkReal(-0.901361465071847))*(x519)))+(((IkReal(0.258999329917800))*(new_r20)))+(((IkReal(-0.901361465071847))*(x505)))+(((IkReal(0.347083356537970))*(x509)))+(((IkReal(-0.347083356537970))*(x517))));
evalcond[1]=((((IkReal(-0.901361465071847))*(x512)))+(((IkReal(-0.901361465071847))*(x515)))+(((IkReal(0.258999329917800))*(new_r21)))+(((IkReal(-0.787635450050147))*(cj5)))+(((IkReal(0.347083356537970))*(x503)))+(((IkReal(-0.347083356537970))*(x516))));
evalcond[2]=((((IkReal(0.735025137662126))*(x506)))+(((IkReal(-0.555366241559602))*(x474)))+(((IkReal(-0.190371018127230))*(x498)))+(((IkReal(0.0733053436601961))*(x510)))+(((IkReal(0.213852473949526))*(x475)))+(((IkReal(0.283032947164231))*(x501))));
evalcond[3]=((((IkReal(-0.213852473949526))*(x474)))+(((IkReal(-0.735025137662126))*(x501)))+(((IkReal(-0.190371018127230))*(x510)))+(((IkReal(-0.555366241559602))*(x475)))+(((IkReal(-0.0733053436601961))*(x498)))+(((IkReal(0.283032947164231))*(x506))));
evalcond[4]=((((cj3)*(x489)))+(((IkReal(-0.148921042535239))*(x481)))+(((IkReal(0.241699403086935))*(x485)))+(x505)+(x519)+(((IkReal(0.709944243199724))*(sj5)))+(((IkReal(0.221407449401510))*(x486))));
evalcond[5]=((((IkReal(-0.241699403086935))*(x486)))+(((IkReal(-1.00000000000000))*(cj3)*(x480)))+(x515)+(x512)+(((IkReal(-1.00000000000000))*(cj3)*(x476)))+(((IkReal(0.221407449401510))*(x485)))+(((IkReal(0.709944243199724))*(cj5))));
evalcond[6]=((((IkReal(0.0930701426091587))*(x485)))+(((IkReal(-0.0573443810338005))*(x481)))+(x478)+(x517)+(((IkReal(-0.574986207811823))*(x486)))+(((IkReal(-1.00000000000000))*(x509)))+(((IkReal(-1.00000000000000))*(cj5)*(x487))));
evalcond[7]=((((IkReal(-0.0930701426091587))*(x486)))+(x483)+(x499)+(x516)+(((IkReal(-1.00000000000000))*(cj5)*(x493)))+(((IkReal(-0.574986207811823))*(x485)))+(((IkReal(-1.00000000000000))*(x503))));
evalcond[8]=((((x487)*(x516)))+(sj5)+(((IkReal(-1.00000000000000))*(x495)*(x498)))+(((IkReal(-1.00000000000000))*(x479)*(x500)))+(((IkReal(-1.00000000000000))*(x496)*(x501)))+(((IkReal(-1.00000000000000))*(sj3)*(x488)))+(((IkReal(-1.00000000000000))*(x487)*(x503)))+(((new_r01)*(sj3)*(x502)))+(((IkReal(-0.359345109652202))*(new_r11)*(x510)))+(((IkReal(-0.0930701426091587))*(x474)*(x479))));
evalcond[9]=((((IkReal(-0.241699403086935))*(x474)*(x491)))+(((IkReal(-1.00000000000000))*(new_r10)*(sj3)*(x500)))+(((IkReal(-0.359345109652202))*(x474)*(x482)))+(((IkReal(-1.00000000000000))*(sj3)*(x494)))+(((IkReal(-1.00000000000000))*(x497)*(x501)))+(((x491)*(x502)))+(((x477)*(x498)))+(((IkReal(-1.00000000000000))*(x482)*(x518)))+(((IkReal(-1.00000000000000))*(x484)*(x513)))+(((IkReal(-1.00000000000000))*(cj5))));
evalcond[10]=((((x491)*(x518)))+(((IkReal(-0.241699403086935))*(x474)*(x482)))+(((IkReal(-1.00000000000000))*(cj3)*(x494)))+(((IkReal(0.359345109652202))*(sj3)*(x505)))+(((x482)*(x502)))+(((x490)*(x501)))+(((IkReal(-1.00000000000000))*(x484)*(x500)))+(((IkReal(-0.0930701426091587))*(x474)*(x484)))+(((IkReal(-1.00000000000000))*(x477)*(x501)))+(((IkReal(0.616141540414459))*(sj5))));
evalcond[11]=((((cj3)*(new_r01)*(x502)))+(((IkReal(-1.00000000000000))*(x496)*(x498)))+(((x479)*(x513)))+(((x495)*(x501)))+(((IkReal(-1.00000000000000))*(cj3)*(x488)))+(((IkReal(-0.0930701426091587))*(new_r11)*(x498)))+(((IkReal(0.933204742898924))*(sj3)*(x503)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r11)*(x500)))+(((IkReal(0.616141540414459))*(cj5)))+(((IkReal(-0.933204742898924))*(x474)*(x479))));
evalcond[12]=((((IkReal(0.0573443810338005))*(x475)*(x481)))+(((IkReal(-0.148921042535239))*(x474)*(x481)))+(((IkReal(0.241699403086935))*(x474)*(x485)))+(((IkReal(-1.00000000000000))*(x475)*(x478)))+(((x489)*(x498)))+(((IkReal(-1.00000000000000))*(x485)*(x502)))+(((x487)*(x507)))+(((sj5)*(x514)))+(((IkReal(0.221407449401510))*(x474)*(x486)))+(new_r00)+(((x486)*(x508))));
evalcond[13]=((((cj5)*(x514)))+(((IkReal(-0.241699403086935))*(x474)*(x486)))+(((IkReal(-1.00000000000000))*(x475)*(x483)))+(((x493)*(x507)))+(((x485)*(x508)))+(((IkReal(-1.00000000000000))*(x480)*(x498)))+(((IkReal(0.221407449401510))*(x474)*(x485)))+(new_r01)+(((x486)*(x502)))+(((IkReal(-1.00000000000000))*(x475)*(x499)))+(((IkReal(-1.00000000000000))*(x476)*(x498))));
evalcond[14]=((((sj5)*(x504)))+(((IkReal(-0.148921042535239))*(x475)*(x481)))+(((x486)*(x511)))+(((x485)*(x500)))+(((IkReal(0.0930701426091587))*(x474)*(x485)))+(((IkReal(-0.0573443810338005))*(x474)*(x481)))+(((x489)*(x510)))+(((x474)*(x478)))+(((IkReal(-1.00000000000000))*(cj5)*(x474)*(x487)))+(new_r10)+(((IkReal(-0.574986207811823))*(x474)*(x486))));
evalcond[15]=((((IkReal(-1.00000000000000))*(x476)*(x510)))+(((IkReal(-1.00000000000000))*(x480)*(x510)))+(((IkReal(-0.0930701426091587))*(x474)*(x486)))+(((x474)*(x483)))+(((cj5)*(x504)))+(((x474)*(x499)))+(new_r11)+(((IkReal(-1.00000000000000))*(x486)*(x500)))+(((IkReal(-0.574986207811823))*(x474)*(x485)))+(((IkReal(-1.00000000000000))*(cj5)*(x474)*(x493)))+(((x485)*(x511))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x520=((new_r12)*(sj3));
IkReal x521=((IkReal(0.241699403086935))*(cj5));
IkReal x522=((cj3)*(new_r12));
IkReal x523=((IkReal(0.148921042535239))*(sj5));
IkReal x524=((IkReal(0.283032947164231))*(sj3));
IkReal x525=((new_r02)*(sj5));
IkReal x526=((IkReal(0.359345109652202))*(cj5));
IkReal x527=((cj3)*(new_r02));
IkReal x528=((IkReal(0.190371018127230))*(cj3));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(x523)*(x527)))+(((IkReal(0.221407449401510))*(sj3)*(x525)))+(((x526)*(x527)))+(((IkReal(-1.00000000000000))*(new_r00)*(x524)))+(((new_r02)*(sj3)*(x521)))+(((IkReal(0.709944243199724))*(x525)))+(((IkReal(0.555366241559602))*(new_r00)))+(((new_r00)*(x528))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((x522)*(x523)))+(((IkReal(-0.555366241559602))*(new_r10)))+(((IkReal(-0.221407449401510))*(sj5)*(x520)))+(((IkReal(-1.00000000000000))*(x520)*(x521)))+(((IkReal(-0.709944243199724))*(new_r12)*(sj5)))+(((new_r10)*(x524)))+(((IkReal(-1.00000000000000))*(new_r10)*(x528)))+(((IkReal(-1.00000000000000))*(x522)*(x526))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(x523)*(x527)))+(((IkReal(0.221407449401510))*(sj3)*(x525)))+(((x526)*(x527)))+(((IkReal(-1.00000000000000))*(new_r00)*(x524)))+(((new_r02)*(sj3)*(x521)))+(((IkReal(0.709944243199724))*(x525)))+(((IkReal(0.555366241559602))*(new_r00)))+(((new_r00)*(x528)))))), ((gconst6)*(((((x522)*(x523)))+(((IkReal(-0.555366241559602))*(new_r10)))+(((IkReal(-0.221407449401510))*(sj5)*(x520)))+(((IkReal(-1.00000000000000))*(x520)*(x521)))+(((IkReal(-0.709944243199724))*(new_r12)*(sj5)))+(((new_r10)*(x524)))+(((IkReal(-1.00000000000000))*(new_r10)*(x528)))+(((IkReal(-1.00000000000000))*(x522)*(x526)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[21];
IkReal x529=IKcos(j2);
IkReal x530=IKsin(j2);
IkReal x531=((IkReal(0.933204742898924))*(cj3));
IkReal x532=((IkReal(0.273375155731700))*(sj5));
IkReal x533=((new_r11)*(sj3));
IkReal x534=((IkReal(0.359345109652202))*(new_r02));
IkReal x535=((IkReal(0.735025137662126))*(sj3));
IkReal x536=((cj3)*(sj5));
IkReal x537=((IkReal(0.0930701426091587))*(cj3));
IkReal x538=((IkReal(0.965877501084962))*(cj3));
IkReal x539=((IkReal(0.148921042535239))*(cj3));
IkReal x540=((IkReal(0.0930701426091587))*(sj3));
IkReal x541=((cj5)*(sj3));
IkReal x542=((IkReal(0.0733053436601961))*(cj3));
IkReal x543=((IkReal(0.241699403086935))*(sj3));
IkReal x544=((cj3)*(cj5));
IkReal x545=((IkReal(0.283032947164231))*(sj3));
IkReal x546=((IkReal(0.574986207811823))*(sj5));
IkReal x547=((IkReal(0.241699403086935))*(new_r00));
IkReal x548=((IkReal(0.965877501084962))*(sj3));
IkReal x549=((IkReal(0.933204742898924))*(sj3));
IkReal x550=((cj3)*(new_r01));
IkReal x551=((cj3)*(new_r11));
IkReal x552=((IkReal(0.190371018127230))*(cj3));
IkReal x553=((IkReal(0.221407449401510))*(sj3));
IkReal x554=((IkReal(0.0573443810338005))*(cj3));
IkReal x555=((IkReal(0.359345109652202))*(cj3));
IkReal x556=((new_r02)*(x530));
IkReal x557=((new_r10)*(x529));
IkReal x558=((sj5)*(x530));
IkReal x559=((IkReal(0.241699403086935))*(x530));
IkReal x560=((sj3)*(x529));
IkReal x561=((new_r00)*(x530));
IkReal x562=((IkReal(0.359345109652202))*(x529));
IkReal x563=((new_r01)*(x530));
IkReal x564=((cj5)*(x529));
IkReal x565=((cj5)*(x530));
IkReal x566=((new_r10)*(x530));
IkReal x567=((new_r12)*(x530));
IkReal x568=((new_r11)*(x529));
IkReal x569=((IkReal(0.359345109652202))*(x530));
IkReal x570=((new_r12)*(x529));
IkReal x571=((new_r02)*(x529));
IkReal x572=((new_r01)*(x529));
IkReal x573=((sj5)*(x529));
IkReal x574=((new_r11)*(x530));
IkReal x575=((cj3)*(x529));
IkReal x576=((new_r00)*(x529));
IkReal x577=((IkReal(0.359345109652202))*(x567));
evalcond[0]=((IkReal(-0.555366241559602))+(((IkReal(-1.00000000000000))*(x552)))+(x545)+(x571)+(x567));
evalcond[1]=((IkReal(-0.213852473949526))+(((IkReal(-1.00000000000000))*(x556)))+(((IkReal(-1.00000000000000))*(x535)))+(((IkReal(-1.00000000000000))*(x542)))+(x570));
evalcond[2]=((IkReal(0.616141540414459))+(((IkReal(-0.901361465071847))*(x571)))+(((IkReal(0.347083356537970))*(x556)))+(((IkReal(0.258999329917800))*(new_r22)))+(((IkReal(-0.347083356537970))*(x570)))+(((IkReal(-0.901361465071847))*(x567))));
evalcond[3]=((((IkReal(-0.901361465071847))*(x576)))+(((IkReal(-0.787635450050147))*(sj5)))+(((IkReal(0.347083356537970))*(x561)))+(((IkReal(0.258999329917800))*(new_r20)))+(((IkReal(-0.347083356537970))*(x557)))+(((IkReal(-0.901361465071847))*(x566))));
evalcond[4]=((((IkReal(-0.901361465071847))*(x572)))+(((IkReal(-0.901361465071847))*(x574)))+(((IkReal(-0.347083356537970))*(x568)))+(((IkReal(0.347083356537970))*(x563)))+(((IkReal(0.258999329917800))*(new_r21)))+(((IkReal(-0.787635450050147))*(cj5))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x529)*(x552)))+(((IkReal(-0.555366241559602))*(x529)))+(((x529)*(x545)))+(new_r02)+(((x530)*(x535)))+(((x530)*(x542)))+(((IkReal(0.213852473949526))*(x530))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x530)*(x552)))+(((IkReal(-0.213852473949526))*(x529)))+(((IkReal(-1.00000000000000))*(x529)*(x535)))+(((IkReal(-1.00000000000000))*(x529)*(x542)))+(((IkReal(-0.555366241559602))*(x530)))+(new_r12)+(((x530)*(x545))));
evalcond[7]=((((IkReal(0.241699403086935))*(x541)))+(((sj5)*(x553)))+(x576)+(x566)+(((IkReal(0.709944243199724))*(sj5)))+(((IkReal(0.359345109652202))*(x544)))+(((IkReal(-0.148921042535239))*(x536))));
evalcond[8]=((((IkReal(0.221407449401510))*(x541)))+(((IkReal(-1.00000000000000))*(sj5)*(x543)))+(x574)+(x572)+(((IkReal(0.709944243199724))*(cj5)))+(((IkReal(-1.00000000000000))*(cj5)*(x539)))+(((IkReal(-0.359345109652202))*(x536))));
evalcond[9]=((((cj5)*(x540)))+(((IkReal(-1.00000000000000))*(sj3)*(x546)))+(x557)+(x532)+(((IkReal(-1.00000000000000))*(x561)))+(((IkReal(-0.0573443810338005))*(x536)))+(((IkReal(-1.00000000000000))*(cj5)*(x531))));
evalcond[10]=((((IkReal(-0.574986207811823))*(x541)))+(((IkReal(-1.00000000000000))*(sj5)*(x540)))+(((sj5)*(x531)))+(((IkReal(0.273375155731700))*(cj5)))+(((IkReal(-0.0573443810338005))*(x544)))+(x568)+(((IkReal(-1.00000000000000))*(x563))));
evalcond[11]=((((IkReal(-1.00000000000000))*(x540)*(x570)))+(((IkReal(-1.00000000000000))*(x543)*(x567)))+(((x531)*(x570)))+(((IkReal(-1.00000000000000))*(new_r22)*(x548)))+(((IkReal(-1.00000000000000))*(x531)*(x556)))+(((IkReal(-1.00000000000000))*(x534)*(x575)))+(((IkReal(-1.00000000000000))*(x555)*(x567)))+(((x540)*(x556)))+(((IkReal(-1.00000000000000))*(x543)*(x571))));
evalcond[12]=((((IkReal(-1.00000000000000))*(x533)*(x559)))+(sj5)+(((IkReal(-1.00000000000000))*(new_r21)*(x548)))+(((IkReal(-1.00000000000000))*(x550)*(x562)))+(((IkReal(-1.00000000000000))*(x551)*(x569)))+(((IkReal(-1.00000000000000))*(x531)*(x563)))+(((IkReal(-0.0930701426091587))*(x529)*(x533)))+(((IkReal(-1.00000000000000))*(x543)*(x572)))+(((x540)*(x563)))+(((x531)*(x568))));
evalcond[13]=((((IkReal(-1.00000000000000))*(x543)*(x566)))+(((IkReal(-1.00000000000000))*(new_r20)*(x548)))+(((IkReal(-1.00000000000000))*(x555)*(x566)))+(((IkReal(-1.00000000000000))*(x540)*(x557)))+(((x531)*(x557)))+(((IkReal(-1.00000000000000))*(x555)*(x576)))+(((IkReal(-1.00000000000000))*(x531)*(x561)))+(((IkReal(-1.00000000000000))*(x543)*(x576)))+(((x540)*(x561)))+(((IkReal(-1.00000000000000))*(cj5))));
evalcond[14]=((IkReal(0.787635450050147))+(((IkReal(-1.00000000000000))*(cj3)*(new_r12)*(x559)))+(((x534)*(x560)))+(((IkReal(-1.00000000000000))*(new_r22)*(x538)))+(((IkReal(-0.241699403086935))*(cj3)*(x571)))+(((sj3)*(x577)))+(((x537)*(x556)))+(((IkReal(-1.00000000000000))*(x549)*(x570)))+(((x549)*(x556)))+(((IkReal(-1.00000000000000))*(x537)*(x570))));
evalcond[15]=((((IkReal(0.359345109652202))*(new_r00)*(x560)))+(((IkReal(-1.00000000000000))*(x547)*(x575)))+(((x537)*(x561)))+(((x549)*(x561)))+(((IkReal(-1.00000000000000))*(new_r20)*(x538)))+(((IkReal(-1.00000000000000))*(x549)*(x557)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r10)*(x559)))+(((IkReal(0.616141540414459))*(sj5)))+(((IkReal(-1.00000000000000))*(x537)*(x557)))+(((IkReal(0.359345109652202))*(sj3)*(x566))));
evalcond[16]=((((IkReal(-0.933204742898924))*(x529)*(x533)))+(((IkReal(0.359345109652202))*(new_r01)*(x560)))+(((x533)*(x569)))+(((x537)*(x563)))+(((x549)*(x563)))+(((IkReal(-1.00000000000000))*(x537)*(x568)))+(((IkReal(-1.00000000000000))*(x551)*(x559)))+(((IkReal(-1.00000000000000))*(new_r21)*(x538)))+(((IkReal(-0.241699403086935))*(x529)*(x550)))+(((IkReal(0.616141540414459))*(cj5))));
evalcond[17]=((((sj3)*(x530)*(x546)))+(((IkReal(0.0573443810338005))*(x530)*(x536)))+(((IkReal(-1.00000000000000))*(x530)*(x532)))+(((IkReal(0.241699403086935))*(x529)*(x541)))+(((x544)*(x562)))+(new_r00)+(((x553)*(x573)))+(((IkReal(-1.00000000000000))*(x540)*(x565)))+(((IkReal(0.709944243199724))*(x573)))+(((IkReal(-0.148921042535239))*(x529)*(x536)))+(((x531)*(x565))));
evalcond[18]=((((IkReal(-1.00000000000000))*(x539)*(x564)))+(((IkReal(0.0573443810338005))*(x530)*(x544)))+(((IkReal(0.221407449401510))*(x529)*(x541)))+(((IkReal(-1.00000000000000))*(x531)*(x558)))+(((IkReal(0.709944243199724))*(x564)))+(((x540)*(x558)))+(((IkReal(-1.00000000000000))*(x536)*(x562)))+(((IkReal(0.574986207811823))*(x530)*(x541)))+(new_r01)+(((IkReal(-1.00000000000000))*(x543)*(x573)))+(((IkReal(-0.273375155731700))*(x565))));
evalcond[19]=((((x541)*(x559)))+(((IkReal(-0.148921042535239))*(x530)*(x536)))+(((IkReal(-1.00000000000000))*(x546)*(x560)))+(((IkReal(-0.0573443810338005))*(x529)*(x536)))+(((IkReal(0.709944243199724))*(x558)))+(((x544)*(x569)))+(new_r10)+(((IkReal(-1.00000000000000))*(x531)*(x564)))+(((x529)*(x532)))+(((x553)*(x558)))+(((x540)*(x564))));
evalcond[20]=((((IkReal(0.221407449401510))*(x530)*(x541)))+(((IkReal(-1.00000000000000))*(x539)*(x565)))+(((IkReal(-1.00000000000000))*(x540)*(x573)))+(((x531)*(x573)))+(((IkReal(-0.574986207811823))*(x529)*(x541)))+(((IkReal(0.709944243199724))*(x565)))+(((IkReal(-1.00000000000000))*(x536)*(x569)))+(((IkReal(-0.0573443810338005))*(x529)*(x544)))+(((IkReal(-1.00000000000000))*(x543)*(x558)))+(new_r11)+(((IkReal(0.273375155731700))*(x564))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  || IKabs(evalcond[18]) > 0.000001  || IKabs(evalcond[19]) > 0.000001  || IKabs(evalcond[20]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x578=((cj3)*(new_r12));
IkReal x579=((IkReal(0.283032947164231))*(sj3));
IkReal x580=((IkReal(0.735025137662126))*(sj3));
IkReal x581=((cj3)*(new_r02));
if( IKabs(((gconst5)*(((((IkReal(-0.213852473949526))*(new_r02)))+(((IkReal(-0.0733053436601961))*(x581)))+(((IkReal(-1.00000000000000))*(new_r12)*(x579)))+(((IkReal(0.555366241559602))*(new_r12)))+(((IkReal(-1.00000000000000))*(new_r02)*(x580)))+(((IkReal(0.190371018127230))*(x578))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(0.190371018127230))*(x581)))+(((IkReal(-1.00000000000000))*(new_r02)*(x579)))+(((IkReal(0.555366241559602))*(new_r02)))+(((new_r12)*(x580)))+(((IkReal(0.213852473949526))*(new_r12)))+(((IkReal(0.0733053436601961))*(x578))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst5)*(((((IkReal(-0.213852473949526))*(new_r02)))+(((IkReal(-0.0733053436601961))*(x581)))+(((IkReal(-1.00000000000000))*(new_r12)*(x579)))+(((IkReal(0.555366241559602))*(new_r12)))+(((IkReal(-1.00000000000000))*(new_r02)*(x580)))+(((IkReal(0.190371018127230))*(x578)))))), ((gconst5)*(((((IkReal(0.190371018127230))*(x581)))+(((IkReal(-1.00000000000000))*(new_r02)*(x579)))+(((IkReal(0.555366241559602))*(new_r02)))+(((new_r12)*(x580)))+(((IkReal(0.213852473949526))*(new_r12)))+(((IkReal(0.0733053436601961))*(x578)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[21];
IkReal x582=IKcos(j2);
IkReal x583=IKsin(j2);
IkReal x584=((IkReal(0.933204742898924))*(cj3));
IkReal x585=((IkReal(0.273375155731700))*(sj5));
IkReal x586=((new_r11)*(sj3));
IkReal x587=((IkReal(0.359345109652202))*(new_r02));
IkReal x588=((IkReal(0.735025137662126))*(sj3));
IkReal x589=((cj3)*(sj5));
IkReal x590=((IkReal(0.0930701426091587))*(cj3));
IkReal x591=((IkReal(0.965877501084962))*(cj3));
IkReal x592=((IkReal(0.148921042535239))*(cj3));
IkReal x593=((IkReal(0.0930701426091587))*(sj3));
IkReal x594=((cj5)*(sj3));
IkReal x595=((IkReal(0.0733053436601961))*(cj3));
IkReal x596=((IkReal(0.241699403086935))*(sj3));
IkReal x597=((cj3)*(cj5));
IkReal x598=((IkReal(0.283032947164231))*(sj3));
IkReal x599=((IkReal(0.574986207811823))*(sj5));
IkReal x600=((IkReal(0.241699403086935))*(new_r00));
IkReal x601=((IkReal(0.965877501084962))*(sj3));
IkReal x602=((IkReal(0.933204742898924))*(sj3));
IkReal x603=((cj3)*(new_r01));
IkReal x604=((cj3)*(new_r11));
IkReal x605=((IkReal(0.190371018127230))*(cj3));
IkReal x606=((IkReal(0.221407449401510))*(sj3));
IkReal x607=((IkReal(0.0573443810338005))*(cj3));
IkReal x608=((IkReal(0.359345109652202))*(cj3));
IkReal x609=((new_r02)*(x583));
IkReal x610=((new_r10)*(x582));
IkReal x611=((sj5)*(x583));
IkReal x612=((IkReal(0.241699403086935))*(x583));
IkReal x613=((sj3)*(x582));
IkReal x614=((new_r00)*(x583));
IkReal x615=((IkReal(0.359345109652202))*(x582));
IkReal x616=((new_r01)*(x583));
IkReal x617=((cj5)*(x582));
IkReal x618=((cj5)*(x583));
IkReal x619=((new_r10)*(x583));
IkReal x620=((new_r12)*(x583));
IkReal x621=((new_r11)*(x582));
IkReal x622=((IkReal(0.359345109652202))*(x583));
IkReal x623=((new_r12)*(x582));
IkReal x624=((new_r02)*(x582));
IkReal x625=((new_r01)*(x582));
IkReal x626=((sj5)*(x582));
IkReal x627=((new_r11)*(x583));
IkReal x628=((cj3)*(x582));
IkReal x629=((new_r00)*(x582));
IkReal x630=((IkReal(0.359345109652202))*(x620));
evalcond[0]=((IkReal(-0.555366241559602))+(x598)+(x624)+(x620)+(((IkReal(-1.00000000000000))*(x605))));
evalcond[1]=((IkReal(-0.213852473949526))+(((IkReal(-1.00000000000000))*(x609)))+(((IkReal(-1.00000000000000))*(x595)))+(x623)+(((IkReal(-1.00000000000000))*(x588))));
evalcond[2]=((IkReal(0.616141540414459))+(((IkReal(0.347083356537970))*(x609)))+(((IkReal(-0.901361465071847))*(x620)))+(((IkReal(-0.901361465071847))*(x624)))+(((IkReal(0.258999329917800))*(new_r22)))+(((IkReal(-0.347083356537970))*(x623))));
evalcond[3]=((((IkReal(-0.347083356537970))*(x610)))+(((IkReal(-0.787635450050147))*(sj5)))+(((IkReal(-0.901361465071847))*(x629)))+(((IkReal(0.347083356537970))*(x614)))+(((IkReal(-0.901361465071847))*(x619)))+(((IkReal(0.258999329917800))*(new_r20))));
evalcond[4]=((((IkReal(-0.901361465071847))*(x627)))+(((IkReal(-0.901361465071847))*(x625)))+(((IkReal(0.347083356537970))*(x616)))+(((IkReal(0.258999329917800))*(new_r21)))+(((IkReal(-0.787635450050147))*(cj5)))+(((IkReal(-0.347083356537970))*(x621))));
evalcond[5]=((((x583)*(x588)))+(((IkReal(0.213852473949526))*(x583)))+(((x583)*(x595)))+(((IkReal(-1.00000000000000))*(x582)*(x605)))+(((x582)*(x598)))+(new_r02)+(((IkReal(-0.555366241559602))*(x582))));
evalcond[6]=((((IkReal(-0.213852473949526))*(x582)))+(((IkReal(-1.00000000000000))*(x582)*(x588)))+(((x583)*(x598)))+(new_r12)+(((IkReal(-0.555366241559602))*(x583)))+(((IkReal(-1.00000000000000))*(x582)*(x595)))+(((IkReal(-1.00000000000000))*(x583)*(x605))));
evalcond[7]=((((IkReal(-0.148921042535239))*(x589)))+(((IkReal(0.359345109652202))*(x597)))+(x619)+(x629)+(((IkReal(0.709944243199724))*(sj5)))+(((sj5)*(x606)))+(((IkReal(0.241699403086935))*(x594))));
evalcond[8]=((((IkReal(-1.00000000000000))*(cj5)*(x592)))+(((IkReal(-0.359345109652202))*(x589)))+(((IkReal(0.221407449401510))*(x594)))+(((IkReal(-1.00000000000000))*(sj5)*(x596)))+(x625)+(x627)+(((IkReal(0.709944243199724))*(cj5))));
evalcond[9]=((((IkReal(-0.0573443810338005))*(x589)))+(((IkReal(-1.00000000000000))*(cj5)*(x584)))+(((IkReal(-1.00000000000000))*(sj3)*(x599)))+(((IkReal(-1.00000000000000))*(x614)))+(x585)+(x610)+(((cj5)*(x593))));
evalcond[10]=((((IkReal(-0.574986207811823))*(x594)))+(((sj5)*(x584)))+(((IkReal(-1.00000000000000))*(x616)))+(((IkReal(-1.00000000000000))*(sj5)*(x593)))+(((IkReal(0.273375155731700))*(cj5)))+(((IkReal(-0.0573443810338005))*(x597)))+(x621));
evalcond[11]=((((IkReal(-1.00000000000000))*(new_r22)*(x601)))+(((IkReal(-1.00000000000000))*(x587)*(x628)))+(((IkReal(-1.00000000000000))*(x596)*(x620)))+(((IkReal(-1.00000000000000))*(x596)*(x624)))+(((x593)*(x609)))+(((x584)*(x623)))+(((IkReal(-1.00000000000000))*(x593)*(x623)))+(((IkReal(-1.00000000000000))*(x584)*(x609)))+(((IkReal(-1.00000000000000))*(x608)*(x620))));
evalcond[12]=((((IkReal(-1.00000000000000))*(x604)*(x622)))+(((IkReal(-1.00000000000000))*(x584)*(x616)))+(sj5)+(((IkReal(-1.00000000000000))*(x596)*(x625)))+(((IkReal(-1.00000000000000))*(x586)*(x612)))+(((x593)*(x616)))+(((IkReal(-0.0930701426091587))*(x582)*(x586)))+(((x584)*(x621)))+(((IkReal(-1.00000000000000))*(new_r21)*(x601)))+(((IkReal(-1.00000000000000))*(x603)*(x615))));
evalcond[13]=((((x584)*(x610)))+(((IkReal(-1.00000000000000))*(new_r20)*(x601)))+(((IkReal(-1.00000000000000))*(x584)*(x614)))+(((IkReal(-1.00000000000000))*(x596)*(x629)))+(((x593)*(x614)))+(((IkReal(-1.00000000000000))*(x596)*(x619)))+(((IkReal(-1.00000000000000))*(x593)*(x610)))+(((IkReal(-1.00000000000000))*(cj5)))+(((IkReal(-1.00000000000000))*(x608)*(x619)))+(((IkReal(-1.00000000000000))*(x608)*(x629))));
evalcond[14]=((IkReal(0.787635450050147))+(((IkReal(-1.00000000000000))*(x590)*(x623)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r12)*(x612)))+(((sj3)*(x630)))+(((x587)*(x613)))+(((x590)*(x609)))+(((IkReal(-1.00000000000000))*(x602)*(x623)))+(((IkReal(-0.241699403086935))*(cj3)*(x624)))+(((IkReal(-1.00000000000000))*(new_r22)*(x591)))+(((x602)*(x609))));
evalcond[15]=((((IkReal(0.359345109652202))*(sj3)*(x619)))+(((IkReal(-1.00000000000000))*(new_r20)*(x591)))+(((IkReal(-1.00000000000000))*(x590)*(x610)))+(((IkReal(-1.00000000000000))*(x600)*(x628)))+(((x590)*(x614)))+(((IkReal(-1.00000000000000))*(cj3)*(new_r10)*(x612)))+(((IkReal(0.359345109652202))*(new_r00)*(x613)))+(((IkReal(0.616141540414459))*(sj5)))+(((x602)*(x614)))+(((IkReal(-1.00000000000000))*(x602)*(x610))));
evalcond[16]=((((IkReal(-1.00000000000000))*(new_r21)*(x591)))+(((x586)*(x622)))+(((IkReal(-1.00000000000000))*(x590)*(x621)))+(((IkReal(-0.933204742898924))*(x582)*(x586)))+(((IkReal(-0.241699403086935))*(x582)*(x603)))+(((IkReal(-1.00000000000000))*(x604)*(x612)))+(((x590)*(x616)))+(((IkReal(0.359345109652202))*(new_r01)*(x613)))+(((IkReal(0.616141540414459))*(cj5)))+(((x602)*(x616))));
evalcond[17]=((((IkReal(-0.148921042535239))*(x582)*(x589)))+(((x584)*(x618)))+(((IkReal(0.241699403086935))*(x582)*(x594)))+(((x597)*(x615)))+(((IkReal(0.709944243199724))*(x626)))+(((IkReal(-1.00000000000000))*(x583)*(x585)))+(((sj3)*(x583)*(x599)))+(new_r00)+(((IkReal(0.0573443810338005))*(x583)*(x589)))+(((IkReal(-1.00000000000000))*(x593)*(x618)))+(((x606)*(x626))));
evalcond[18]=((((IkReal(0.709944243199724))*(x617)))+(((IkReal(-1.00000000000000))*(x584)*(x611)))+(((IkReal(-1.00000000000000))*(x596)*(x626)))+(((IkReal(-1.00000000000000))*(x589)*(x615)))+(((IkReal(0.574986207811823))*(x583)*(x594)))+(((x593)*(x611)))+(((IkReal(-0.273375155731700))*(x618)))+(((IkReal(0.221407449401510))*(x582)*(x594)))+(((IkReal(0.0573443810338005))*(x583)*(x597)))+(new_r01)+(((IkReal(-1.00000000000000))*(x592)*(x617))));
evalcond[19]=((((IkReal(0.709944243199724))*(x611)))+(((IkReal(-0.148921042535239))*(x583)*(x589)))+(((IkReal(-1.00000000000000))*(x584)*(x617)))+(((x582)*(x585)))+(((x593)*(x617)))+(((x594)*(x612)))+(((IkReal(-1.00000000000000))*(x599)*(x613)))+(((x606)*(x611)))+(((IkReal(-0.0573443810338005))*(x582)*(x589)))+(new_r10)+(((x597)*(x622))));
evalcond[20]=((((IkReal(0.709944243199724))*(x618)))+(((IkReal(-0.0573443810338005))*(x582)*(x597)))+(((IkReal(-0.574986207811823))*(x582)*(x594)))+(((IkReal(-1.00000000000000))*(x596)*(x611)))+(((x584)*(x626)))+(((IkReal(-1.00000000000000))*(x589)*(x622)))+(((IkReal(-1.00000000000000))*(x593)*(x626)))+(new_r11)+(((IkReal(0.273375155731700))*(x617)))+(((IkReal(0.221407449401510))*(x583)*(x594)))+(((IkReal(-1.00000000000000))*(x592)*(x618))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  || IKabs(evalcond[15]) > 0.000001  || IKabs(evalcond[16]) > 0.000001  || IKabs(evalcond[17]) > 0.000001  || IKabs(evalcond[18]) > 0.000001  || IKabs(evalcond[19]) > 0.000001  || IKabs(evalcond[20]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j2;
vinfos[0].indices[0] = _ij2[0];
vinfos[0].indices[1] = _ij2[1];
vinfos[0].maxsolutions = _nj2;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j3;
vinfos[1].indices[0] = _ij3[0];
vinfos[1].indices[1] = _ij3[1];
vinfos[1].maxsolutions = _nj3;
vinfos[2].jointtype = 17;
vinfos[2].foffset = j4;
vinfos[2].indices[0] = _ij4[0];
vinfos[2].indices[1] = _ij4[1];
vinfos[2].maxsolutions = _nj4;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j5;
vinfos[3].indices[0] = _ij5[0];
vinfos[3].indices[1] = _ij5[1];
vinfos[3].maxsolutions = _nj5;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j6;
vinfos[4].indices[0] = _ij6[0];
vinfos[4].indices[1] = _ij6[1];
vinfos[4].maxsolutions = _nj6;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j7;
vinfos[5].indices[0] = _ij7[0];
vinfos[5].indices[1] = _ij7[1];
vinfos[5].maxsolutions = _nj7;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
}
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "0194e228ce5dccaffee7b1a6814f8514"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
